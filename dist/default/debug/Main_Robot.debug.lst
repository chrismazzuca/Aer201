

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jan 30 01:17:49 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4620 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	mediumconst
    54  00FB3A                     __pmediumconst:
    55                           	opt stack 0
    56  00FB3A  00                 	db	0
    57  00FB3B                     _input:
    58                           	opt stack 0
    59  00FB3B  31                 	db	49
    60  00FB3C  32                 	db	50
    61  00FB3D  33                 	db	51
    62  00FB3E  52                 	db	82
    63  00FB3F  34                 	db	52
    64  00FB40  35                 	db	53
    65  00FB41  36                 	db	54
    66  00FB42  46                 	db	70
    67  00FB43  37                 	db	55
    68  00FB44  38                 	db	56
    69  00FB45  39                 	db	57
    70  00FB46  4C                 	db	76
    71  00FB47  2A                 	db	42
    72  00FB48  30                 	db	48
    73  00FB49  23                 	db	35
    74  00FB4A  44                 	db	68
    75  00FB4B  00                 	db	0
    76  00FB4C                     __end_of_input:
    77                           	opt stack 0
    78  00FB4C                     _keys:
    79                           	opt stack 0
    80  00FB4C  31                 	db	49
    81  00FB4D  32                 	db	50
    82  00FB4E  33                 	db	51
    83  00FB4F  41                 	db	65
    84  00FB50  34                 	db	52
    85  00FB51  35                 	db	53
    86  00FB52  36                 	db	54
    87  00FB53  42                 	db	66
    88  00FB54  37                 	db	55
    89  00FB55  38                 	db	56
    90  00FB56  39                 	db	57
    91  00FB57  43                 	db	67
    92  00FB58  2A                 	db	42
    93  00FB59  30                 	db	48
    94  00FB5A  23                 	db	35
    95  00FB5B  44                 	db	68
    96  00FB5C  00                 	db	0
    97  00FB5D                     __end_of_keys:
    98                           	opt stack 0
    99  00FB5D                     _LCD_LEFT:
   100                           	opt stack 0
   101  00FB5D  00                 	db	0
   102  00FB5E                     __end_of_LCD_LEFT:
   103                           	opt stack 0
   104  00FB5E                     _LCD_RIGHT:
   105                           	opt stack 0
   106  00FB5E  01                 	db	1
   107  00FB5F                     __end_of_LCD_RIGHT:
   108                           	opt stack 0
   109  00FB5F                     _LCD_SIZE_VERT:
   110                           	opt stack 0
   111  00FB5F  02                 	db	2
   112  00FB60                     __end_of_LCD_SIZE_VERT:
   113                           	opt stack 0
   114  00FB60                     _LCD_SIZE_HORZ:
   115                           	opt stack 0
   116  00FB60  10                 	db	16
   117  00FB61                     __end_of_LCD_SIZE_HORZ:
   118                           	opt stack 0
   119  00FB61                     _LCD_VERT_LIMIT:
   120                           	opt stack 0
   121  00FB61  02                 	db	2
   122  00FB62                     __end_of_LCD_VERT_LIMIT:
   123                           	opt stack 0
   124  00FB62                     _LCD_HORZ_LIMIT:
   125                           	opt stack 0
   126  00FB62  28                 	db	40
   127  00FB63                     __end_of_LCD_HORZ_LIMIT:
   128                           	opt stack 0
   129  0000                     _LATDbits	set	3980
   130  0000                     _PORTB	set	3969
   131  0000                     _PORTBbits	set	3969
   132  0000                     _TRISE	set	3990
   133  0000                     _TRISD	set	3989
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISA	set	3986
   137  0000                     _LATE	set	3981
   138  0000                     _LATD	set	3980
   139  0000                     _LATC	set	3979
   140  0000                     _LATB	set	3978
   141  0000                     _LATA	set	3977
   142  0000                     _ADCON1	set	4033
   143  0000                     _ADCON0	set	4034
   144  0000                     _INTCONbits	set	4082
   145  00FB63                     STR_9:
   146  00FB63  6B                 	db	107	;'k'
   147  00FB64  65                 	db	101	;'e'
   148  00FB65  79                 	db	121	;'y'
   149  00FB66  20                 	db	32
   150  00FB67  74                 	db	116	;'t'
   151  00FB68  6F                 	db	111	;'o'
   152  00FB69  20                 	db	32
   153  00FB6A  63                 	db	99	;'c'
   154  00FB6B  6F                 	db	111	;'o'
   155  00FB6C  6E                 	db	110	;'n'
   156  00FB6D  74                 	db	116	;'t'
   157  00FB6E  69                 	db	105	;'i'
   158  00FB6F  6E                 	db	110	;'n'
   159  00FB70  75                 	db	117	;'u'
   160  00FB71  65                 	db	101	;'e'
   161  00FB72  2E                 	db	46
   162  00FB73  00                 	db	0
   163  00FB74                     STR_3:
   164  00FB74  62                 	db	98	;'b'
   165  00FB75  65                 	db	101	;'e'
   166  00FB76  67                 	db	103	;'g'
   167  00FB77  69                 	db	105	;'i'
   168  00FB78  6E                 	db	110	;'n'
   169  00FB79  20                 	db	32
   170  00FB7A  6F                 	db	111	;'o'
   171  00FB7B  70                 	db	112	;'p'
   172  00FB7C  65                 	db	101	;'e'
   173  00FB7D  72                 	db	114	;'r'
   174  00FB7E  61                 	db	97	;'a'
   175  00FB7F  74                 	db	116	;'t'
   176  00FB80  69                 	db	105	;'i'
   177  00FB81  6F                 	db	111	;'o'
   178  00FB82  6E                 	db	110	;'n'
   179  00FB83  2E                 	db	46
   180  00FB84  00                 	db	0
   181  00FB85                     STR_2:
   182  00FB85  50                 	db	80	;'P'
   183  00FB86  72                 	db	114	;'r'
   184  00FB87  65                 	db	101	;'e'
   185  00FB88  73                 	db	115	;'s'
   186  00FB89  73                 	db	115	;'s'
   187  00FB8A  20                 	db	32
   188  00FB8B  61                 	db	97	;'a'
   189  00FB8C  6E                 	db	110	;'n'
   190  00FB8D  79                 	db	121	;'y'
   191  00FB8E  20                 	db	32
   192  00FB8F  6B                 	db	107	;'k'
   193  00FB90  65                 	db	101	;'e'
   194  00FB91  79                 	db	121	;'y'
   195  00FB92  20                 	db	32
   196  00FB93  74                 	db	116	;'t'
   197  00FB94  6F                 	db	111	;'o'
   198  00FB95  00                 	db	0
   199  00FB96                     STR_5:
   200  00FB96  63                 	db	99	;'c'
   201  00FB97  61                 	db	97	;'a'
   202  00FB98  62                 	db	98	;'b'
   203  00FB99  69                 	db	105	;'i'
   204  00FB9A  6E                 	db	110	;'n'
   205  00FB9B  65                 	db	101	;'e'
   206  00FB9C  74                 	db	116	;'t'
   207  00FB9D  20                 	db	32
   208  00FB9E  73                 	db	115	;'s'
   209  00FB9F  6F                 	db	111	;'o'
   210  00FBA0  72                 	db	114	;'r'
   211  00FBA1  74                 	db	116	;'t'
   212  00FBA2  65                 	db	101	;'e'
   213  00FBA3  72                 	db	114	;'r'
   214  00FBA4  21                 	db	33
   215  00FBA5  00                 	db	0
   216  00FBA6                     STR_4:
   217  00FBA6  57                 	db	87	;'W'
   218  00FBA7  65                 	db	101	;'e'
   219  00FBA8  6C                 	db	108	;'l'
   220  00FBA9  63                 	db	99	;'c'
   221  00FBAA  6F                 	db	111	;'o'
   222  00FBAB  6D                 	db	109	;'m'
   223  00FBAC  65                 	db	101	;'e'
   224  00FBAD  20                 	db	32
   225  00FBAE  74                 	db	116	;'t'
   226  00FBAF  6F                 	db	111	;'o'
   227  00FBB0  20                 	db	32
   228  00FBB1  79                 	db	121	;'y'
   229  00FBB2  6F                 	db	111	;'o'
   230  00FBB3  75                 	db	117	;'u'
   231  00FBB4  72                 	db	114	;'r'
   232  00FBB5  00                 	db	0
   233  00FBB6                     STR_8:
   234  00FBB6  74                 	db	116	;'t'
   235  00FBB7  68                 	db	104	;'h'
   236  00FBB8  65                 	db	101	;'e'
   237  00FBB9  6E                 	db	110	;'n'
   238  00FBBA  20                 	db	32
   239  00FBBB  70                 	db	112	;'p'
   240  00FBBC  72                 	db	114	;'r'
   241  00FBBD  65                 	db	101	;'e'
   242  00FBBE  73                 	db	115	;'s'
   243  00FBBF  73                 	db	115	;'s'
   244  00FBC0  20                 	db	32
   245  00FBC1  61                 	db	97	;'a'
   246  00FBC2  6E                 	db	110	;'n'
   247  00FBC3  79                 	db	121	;'y'
   248  00FBC4  00                 	db	0
   249  00FBC5                     STR_12:
   250  00FBC5  74                 	db	116	;'t'
   251  00FBC6  68                 	db	104	;'h'
   252  00FBC7  65                 	db	101	;'e'
   253  00FBC8  20                 	db	32
   254  00FBC9  72                 	db	114	;'r'
   255  00FBCA  61                 	db	97	;'a'
   256  00FBCB  74                 	db	116	;'t'
   257  00FBCC  20                 	db	32
   258  00FBCD  66                 	db	102	;'f'
   259  00FBCE  6F                 	db	111	;'o'
   260  00FBCF  6F                 	db	111	;'o'
   261  00FBD0  64                 	db	100	;'d'
   262  00FBD1  2C                 	db	44
   263  00FBD2  00                 	db	0
   264  00FBD3                     STR_19:
   265  00FBD3  42                 	db	66	;'B'
   266  00FBD4  20                 	db	32
   267  00FBD5  3D                 	db	61	;'='
   268  00FBD6  20                 	db	32
   269  00FBD7  46                 	db	70	;'F'
   270  00FBD8  3B                 	db	59	;';'
   271  00FBD9  20                 	db	32
   272  00FBDA  43                 	db	67	;'C'
   273  00FBDB  20                 	db	32
   274  00FBDC  3D                 	db	61	;'='
   275  00FBDD  20                 	db	32
   276  00FBDE  4C                 	db	76	;'L'
   277  00FBDF  2E                 	db	46
   278  00FBE0  00                 	db	0
   279  00FBE1                     STR_20:
   280  00FBE1  50                 	db	80	;'P'
   281  00FBE2  72                 	db	114	;'r'
   282  00FBE3  65                 	db	101	;'e'
   283  00FBE4  73                 	db	115	;'s'
   284  00FBE5  73                 	db	115	;'s'
   285  00FBE6  20                 	db	32
   286  00FBE7  23                 	db	35
   287  00FBE8  20                 	db	32
   288  00FBE9  61                 	db	97	;'a'
   289  00FBEA  66                 	db	102	;'f'
   290  00FBEB  74                 	db	116	;'t'
   291  00FBEC  65                 	db	101	;'e'
   292  00FBED  72                 	db	114	;'r'
   293  00FBEE  00                 	db	0
   294  00FBEF                     STR_6:
   295  00FBEF  50                 	db	80	;'P'
   296  00FBF0  6C                 	db	108	;'l'
   297  00FBF1  65                 	db	101	;'e'
   298  00FBF2  61                 	db	97	;'a'
   299  00FBF3  73                 	db	115	;'s'
   300  00FBF4  65                 	db	101	;'e'
   301  00FBF5  20                 	db	32
   302  00FBF6  69                 	db	105	;'i'
   303  00FBF7  6E                 	db	110	;'n'
   304  00FBF8  73                 	db	115	;'s'
   305  00FBF9  65                 	db	101	;'e'
   306  00FBFA  72                 	db	114	;'r'
   307  00FBFB  74                 	db	116	;'t'
   308  00FBFC  00                 	db	0
   309  00FBFD                     STR_7:
   310  00FBFD  74                 	db	116	;'t'
   311  00FBFE  68                 	db	104	;'h'
   312  00FBFF  65                 	db	101	;'e'
   313  00FC00  20                 	db	32
   314  00FC01  63                 	db	99	;'c'
   315  00FC02  61                 	db	97	;'a'
   316  00FC03  62                 	db	98	;'b'
   317  00FC04  69                 	db	105	;'i'
   318  00FC05  6E                 	db	110	;'n'
   319  00FC06  65                 	db	101	;'e'
   320  00FC07  74                 	db	116	;'t'
   321  00FC08  2C                 	db	44
   322  00FC09  00                 	db	0
   323  00FC0A                     STR_17:
   324  00FC0A  64                 	db	100	;'d'
   325  00FC0B  72                 	db	114	;'r'
   326  00FC0C  61                 	db	97	;'a'
   327  00FC0D  77                 	db	119	;'w'
   328  00FC0E  65                 	db	101	;'e'
   329  00FC0F  72                 	db	114	;'r'
   330  00FC10  20                 	db	32
   331  00FC11  69                 	db	105	;'i'
   332  00FC12  6E                 	db	110	;'n'
   333  00FC13  66                 	db	102	;'f'
   334  00FC14  6F                 	db	111	;'o'
   335  00FC15  2E                 	db	46
   336  00FC16  00                 	db	0
   337  00FC17                     STR_21:
   338  00FC17  65                 	db	101	;'e'
   339  00FC18  61                 	db	97	;'a'
   340  00FC19  63                 	db	99	;'c'
   341  00FC1A  68                 	db	104	;'h'
   342  00FC1B  20                 	db	32
   343  00FC1C  64                 	db	100	;'d'
   344  00FC1D  72                 	db	114	;'r'
   345  00FC1E  61                 	db	97	;'a'
   346  00FC1F  77                 	db	119	;'w'
   347  00FC20  65                 	db	101	;'e'
   348  00FC21  72                 	db	114	;'r'
   349  00FC22  2E                 	db	46
   350  00FC23  00                 	db	0
   351  00FC24                     STR_16:
   352  00FC24  50                 	db	80	;'P'
   353  00FC25  6C                 	db	108	;'l'
   354  00FC26  65                 	db	101	;'e'
   355  00FC27  61                 	db	97	;'a'
   356  00FC28  73                 	db	115	;'s'
   357  00FC29  65                 	db	101	;'e'
   358  00FC2A  20                 	db	32
   359  00FC2B  69                 	db	105	;'i'
   360  00FC2C  6E                 	db	110	;'n'
   361  00FC2D  70                 	db	112	;'p'
   362  00FC2E  75                 	db	117	;'u'
   363  00FC2F  74                 	db	116	;'t'
   364  00FC30  00                 	db	0
   365  00FC31                     STR_18:
   366  00FC31  4B                 	db	75	;'K'
   367  00FC32  65                 	db	101	;'e'
   368  00FC33  79                 	db	121	;'y'
   369  00FC34  73                 	db	115	;'s'
   370  00FC35  20                 	db	32
   371  00FC36  41                 	db	65	;'A'
   372  00FC37  20                 	db	32
   373  00FC38  3D                 	db	61	;'='
   374  00FC39  20                 	db	32
   375  00FC3A  52                 	db	82	;'R'
   376  00FC3B  3B                 	db	59	;';'
   377  00FC3C  00                 	db	0
   378  00FC3D                     STR_15:
   379  00FC3D  46                 	db	70	;'F'
   380  00FC3E  61                 	db	97	;'a'
   381  00FC3F  6E                 	db	110	;'n'
   382  00FC40  74                 	db	116	;'t'
   383  00FC41  61                 	db	97	;'a'
   384  00FC42  73                 	db	115	;'s'
   385  00FC43  74                 	db	116	;'t'
   386  00FC44  69                 	db	105	;'i'
   387  00FC45  63                 	db	99	;'c'
   388  00FC46  21                 	db	33
   389  00FC47  00                 	db	0
   390  00FC48                     STR_31:
   391  00FC48  44                 	db	68	;'D'
   392  00FC49  72                 	db	114	;'r'
   393  00FC4A  61                 	db	97	;'a'
   394  00FC4B  77                 	db	119	;'w'
   395  00FC4C  65                 	db	101	;'e'
   396  00FC4D  72                 	db	114	;'r'
   397  00FC4E  20                 	db	32
   398  00FC4F  31                 	db	49	;'1'
   399  00FC50  30                 	db	48	;'0'
   400  00FC51  3A                 	db	58	;':'
   401  00FC52  00                 	db	0
   402  00FC53                     STR_32:
   403  00FC53  44                 	db	68	;'D'
   404  00FC54  72                 	db	114	;'r'
   405  00FC55  61                 	db	97	;'a'
   406  00FC56  77                 	db	119	;'w'
   407  00FC57  65                 	db	101	;'e'
   408  00FC58  72                 	db	114	;'r'
   409  00FC59  20                 	db	32
   410  00FC5A  31                 	db	49	;'1'
   411  00FC5B  31                 	db	49	;'1'
   412  00FC5C  3A                 	db	58	;':'
   413  00FC5D  00                 	db	0
   414  00FC5E                     STR_33:
   415  00FC5E  44                 	db	68	;'D'
   416  00FC5F  72                 	db	114	;'r'
   417  00FC60  61                 	db	97	;'a'
   418  00FC61  77                 	db	119	;'w'
   419  00FC62  65                 	db	101	;'e'
   420  00FC63  72                 	db	114	;'r'
   421  00FC64  20                 	db	32
   422  00FC65  31                 	db	49	;'1'
   423  00FC66  32                 	db	50	;'2'
   424  00FC67  3A                 	db	58	;':'
   425  00FC68  00                 	db	0
   426  00FC69                     STR_34:
   427  00FC69  44                 	db	68	;'D'
   428  00FC6A  72                 	db	114	;'r'
   429  00FC6B  61                 	db	97	;'a'
   430  00FC6C  77                 	db	119	;'w'
   431  00FC6D  65                 	db	101	;'e'
   432  00FC6E  72                 	db	114	;'r'
   433  00FC6F  20                 	db	32
   434  00FC70  31                 	db	49	;'1'
   435  00FC71  33                 	db	51	;'3'
   436  00FC72  3A                 	db	58	;':'
   437  00FC73  00                 	db	0
   438  00FC74                     STR_35:
   439  00FC74  44                 	db	68	;'D'
   440  00FC75  72                 	db	114	;'r'
   441  00FC76  61                 	db	97	;'a'
   442  00FC77  77                 	db	119	;'w'
   443  00FC78  65                 	db	101	;'e'
   444  00FC79  72                 	db	114	;'r'
   445  00FC7A  20                 	db	32
   446  00FC7B  31                 	db	49	;'1'
   447  00FC7C  34                 	db	52	;'4'
   448  00FC7D  3A                 	db	58	;':'
   449  00FC7E  00                 	db	0
   450  00FC7F                     STR_36:
   451  00FC7F  44                 	db	68	;'D'
   452  00FC80  72                 	db	114	;'r'
   453  00FC81  61                 	db	97	;'a'
   454  00FC82  77                 	db	119	;'w'
   455  00FC83  65                 	db	101	;'e'
   456  00FC84  72                 	db	114	;'r'
   457  00FC85  20                 	db	32
   458  00FC86  31                 	db	49	;'1'
   459  00FC87  35                 	db	53	;'5'
   460  00FC88  3A                 	db	58	;':'
   461  00FC89  00                 	db	0
   462  00FC8A                     STR_37:
   463  00FC8A  44                 	db	68	;'D'
   464  00FC8B  72                 	db	114	;'r'
   465  00FC8C  61                 	db	97	;'a'
   466  00FC8D  77                 	db	119	;'w'
   467  00FC8E  65                 	db	101	;'e'
   468  00FC8F  72                 	db	114	;'r'
   469  00FC90  20                 	db	32
   470  00FC91  31                 	db	49	;'1'
   471  00FC92  36                 	db	54	;'6'
   472  00FC93  3A                 	db	58	;':'
   473  00FC94  00                 	db	0
   474  00FC95                     STR_22:
   475  00FC95  44                 	db	68	;'D'
   476  00FC96  72                 	db	114	;'r'
   477  00FC97  61                 	db	97	;'a'
   478  00FC98  77                 	db	119	;'w'
   479  00FC99  65                 	db	101	;'e'
   480  00FC9A  72                 	db	114	;'r'
   481  00FC9B  20                 	db	32
   482  00FC9C  31                 	db	49	;'1'
   483  00FC9D  3A                 	db	58	;':'
   484  00FC9E  00                 	db	0
   485  00FC9F                     STR_23:
   486  00FC9F  44                 	db	68	;'D'
   487  00FCA0  72                 	db	114	;'r'
   488  00FCA1  61                 	db	97	;'a'
   489  00FCA2  77                 	db	119	;'w'
   490  00FCA3  65                 	db	101	;'e'
   491  00FCA4  72                 	db	114	;'r'
   492  00FCA5  20                 	db	32
   493  00FCA6  32                 	db	50	;'2'
   494  00FCA7  3A                 	db	58	;':'
   495  00FCA8  00                 	db	0
   496  00FCA9                     STR_24:
   497  00FCA9  44                 	db	68	;'D'
   498  00FCAA  72                 	db	114	;'r'
   499  00FCAB  61                 	db	97	;'a'
   500  00FCAC  77                 	db	119	;'w'
   501  00FCAD  65                 	db	101	;'e'
   502  00FCAE  72                 	db	114	;'r'
   503  00FCAF  20                 	db	32
   504  00FCB0  33                 	db	51	;'3'
   505  00FCB1  3A                 	db	58	;':'
   506  00FCB2  00                 	db	0
   507  00FCB3                     STR_25:
   508  00FCB3  44                 	db	68	;'D'
   509  00FCB4  72                 	db	114	;'r'
   510  00FCB5  61                 	db	97	;'a'
   511  00FCB6  77                 	db	119	;'w'
   512  00FCB7  65                 	db	101	;'e'
   513  00FCB8  72                 	db	114	;'r'
   514  00FCB9  20                 	db	32
   515  00FCBA  34                 	db	52	;'4'
   516  00FCBB  3A                 	db	58	;':'
   517  00FCBC  00                 	db	0
   518  00FCBD                     STR_26:
   519  00FCBD  44                 	db	68	;'D'
   520  00FCBE  72                 	db	114	;'r'
   521  00FCBF  61                 	db	97	;'a'
   522  00FCC0  77                 	db	119	;'w'
   523  00FCC1  65                 	db	101	;'e'
   524  00FCC2  72                 	db	114	;'r'
   525  00FCC3  20                 	db	32
   526  00FCC4  35                 	db	53	;'5'
   527  00FCC5  3A                 	db	58	;':'
   528  00FCC6  00                 	db	0
   529  00FCC7                     STR_27:
   530  00FCC7  44                 	db	68	;'D'
   531  00FCC8  72                 	db	114	;'r'
   532  00FCC9  61                 	db	97	;'a'
   533  00FCCA  77                 	db	119	;'w'
   534  00FCCB  65                 	db	101	;'e'
   535  00FCCC  72                 	db	114	;'r'
   536  00FCCD  20                 	db	32
   537  00FCCE  36                 	db	54	;'6'
   538  00FCCF  3A                 	db	58	;':'
   539  00FCD0  00                 	db	0
   540  00FCD1                     STR_28:
   541  00FCD1  44                 	db	68	;'D'
   542  00FCD2  72                 	db	114	;'r'
   543  00FCD3  61                 	db	97	;'a'
   544  00FCD4  77                 	db	119	;'w'
   545  00FCD5  65                 	db	101	;'e'
   546  00FCD6  72                 	db	114	;'r'
   547  00FCD7  20                 	db	32
   548  00FCD8  37                 	db	55	;'7'
   549  00FCD9  3A                 	db	58	;':'
   550  00FCDA  00                 	db	0
   551  00FCDB                     STR_29:
   552  00FCDB  44                 	db	68	;'D'
   553  00FCDC  72                 	db	114	;'r'
   554  00FCDD  61                 	db	97	;'a'
   555  00FCDE  77                 	db	119	;'w'
   556  00FCDF  65                 	db	101	;'e'
   557  00FCE0  72                 	db	114	;'r'
   558  00FCE1  20                 	db	32
   559  00FCE2  38                 	db	56	;'8'
   560  00FCE3  3A                 	db	58	;':'
   561  00FCE4  00                 	db	0
   562  00FCE5                     STR_30:
   563  00FCE5  44                 	db	68	;'D'
   564  00FCE6  72                 	db	114	;'r'
   565  00FCE7  61                 	db	97	;'a'
   566  00FCE8  77                 	db	119	;'w'
   567  00FCE9  65                 	db	101	;'e'
   568  00FCEA  72                 	db	114	;'r'
   569  00FCEB  20                 	db	32
   570  00FCEC  39                 	db	57	;'9'
   571  00FCED  3A                 	db	58	;':'
   572  00FCEE  00                 	db	0
   573  00FCEF                     STR_1:
   574  00FCEF  53                 	db	83	;'S'
   575  00FCF0  74                 	db	116	;'t'
   576  00FCF1  61                 	db	97	;'a'
   577  00FCF2  6E                 	db	110	;'n'
   578  00FCF3  64                 	db	100	;'d'
   579  00FCF4  62                 	db	98	;'b'
   580  00FCF5  79                 	db	121	;'y'
   581  00FCF6  00                 	db	0
   582  00FCF7                     STR_10:
   583  00FCF7  47                 	db	71	;'G'
   584  00FCF8  72                 	db	114	;'r'
   585  00FCF9  65                 	db	101	;'e'
   586  00FCFA  61                 	db	97	;'a'
   587  00FCFB  74                 	db	116	;'t'
   588  00FCFC  21                 	db	33
   589  00FCFD  00                 	db	0
   590  0000                     
   591                           ; #config settings
   592  00FCFE  00                 	db	0	; dummy byte at the end
   593  0000                     
   594                           	psect	cinit
   595  00F0F4                     __pcinit:
   596                           	opt stack 0
   597  00F0F4                     start_initialization:
   598                           	opt stack 0
   599  00F0F4                     __initialization:
   600                           	opt stack 0
   601                           
   602                           ; Clear objects allocated to COMRAM (2 bytes)
   603  00F0F4  6A1E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   604  00F0F6  6A1D               	clrf	__pbssCOMRAM& (0+255),c
   605  00F0F8                     end_of_initialization:
   606                           	opt stack 0
   607  00F0F8                     __end_of__initialization:
   608                           	opt stack 0
   609  00F0F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   610  00F0FA  6EF8               	movwf	tblptru,c
   611  00F0FC  0100               	movlb	0
   612  00F0FE  EF0F  F079         	goto	_main	;jump to C main() function
   613                           tblptru	equ	0xFF8
   614                           
   615                           	psect	bssCOMRAM
   616  00001D                     __pbssCOMRAM:
   617                           	opt stack 0
   618  00001D                     lcd@LCDinterruptState:
   619                           	opt stack 0
   620  00001D                     	ds	1
   621  00001E                     	ds	1
   622                           tblptru	equ	0xFF8
   623                           
   624                           	psect	cstackCOMRAM
   625  000001                     __pcstackCOMRAM:
   626                           	opt stack 0
   627  000001                     lcdNibble@temp:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x0
   631  000001                     	ds	1
   632  000002                     lcdNibble@data:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x1
   636  000002                     	ds	1
   637  000003                     lcdInst@data:
   638                           	opt stack 0
   639  000003                     putch@data:
   640                           	opt stack 0
   641                           
   642                           ; 1 bytes @ 0x2
   643  000003                     	ds	1
   644  000004                     ??_initLCD:
   645  000004                     ?_printf:
   646                           	opt stack 0
   647  000004                     printf@f:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x3
   651  000004                     	ds	2
   652  000006                     printf@ap:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x5
   656  000006                     	ds	2
   657  000008                     printf@c:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x7
   661  000008                     	ds	1
   662  000009                     ??_main:
   663                           
   664                           ; 1 bytes @ 0x8
   665  000009                     	ds	2
   666  00000B                     main@keypress_204:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0xA
   670  00000B                     	ds	1
   671  00000C                     main@temp:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0xB
   675  00000C                     	ds	1
   676  00000D                     main@keypress:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0xC
   680  00000D                     	ds	1
   681  00000E                     main@keypress_175:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0xD
   685  00000E                     	ds	1
   686  00000F                     main@keypress_177:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0xE
   690  00000F                     	ds	1
   691  000010                     main@keypress_179:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0xF
   695  000010                     	ds	1
   696  000011                     main@keypress_181:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x10
   700  000011                     	ds	1
   701  000012                     main@keypress_183:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x11
   705  000012                     	ds	1
   706  000013                     main@keypress_185:
   707                           	opt stack 0
   708                           
   709                           ; 1 bytes @ 0x12
   710  000013                     	ds	1
   711  000014                     main@keypress_187:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x13
   715  000014                     	ds	1
   716  000015                     main@keypress_189:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x14
   720  000015                     	ds	1
   721  000016                     main@keypress_191:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x15
   725  000016                     	ds	1
   726  000017                     main@keypress_193:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x16
   730  000017                     	ds	1
   731  000018                     main@keypress_195:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x17
   735  000018                     	ds	1
   736  000019                     main@keypress_197:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x18
   740  000019                     	ds	1
   741  00001A                     main@keypress_199:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x19
   745  00001A                     	ds	1
   746  00001B                     main@keypress_201:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x1A
   750  00001B                     	ds	1
   751  00001C                     main@keypress_203:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x1B
   755  00001C                     	ds	1
   756                           tblptru	equ	0xFF8
   757                           
   758 ;;
   759 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   760 ;;
   761 ;; *************** function _main *****************
   762 ;; Defined at:
   763 ;;		line 16 in file "main.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  temp            1   11[COMRAM] unsigned char 
   768 ;;  keypress        1   10[COMRAM] unsigned char 
   769 ;;  keypress        1   27[COMRAM] unsigned char 
   770 ;;  keypress        1   26[COMRAM] unsigned char 
   771 ;;  keypress        1   25[COMRAM] unsigned char 
   772 ;;  keypress        1   24[COMRAM] unsigned char 
   773 ;;  keypress        1   23[COMRAM] unsigned char 
   774 ;;  keypress        1   22[COMRAM] unsigned char 
   775 ;;  keypress        1   21[COMRAM] unsigned char 
   776 ;;  keypress        1   20[COMRAM] unsigned char 
   777 ;;  keypress        1   19[COMRAM] unsigned char 
   778 ;;  keypress        1   18[COMRAM] unsigned char 
   779 ;;  keypress        1   17[COMRAM] unsigned char 
   780 ;;  keypress        1   16[COMRAM] unsigned char 
   781 ;;  keypress        1   15[COMRAM] unsigned char 
   782 ;;  keypress        1   14[COMRAM] unsigned char 
   783 ;;  keypress        1   13[COMRAM] unsigned char 
   784 ;;  keypress        1   12[COMRAM] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;Total ram usage:       20 bytes
   799 ;; Hardware stack levels required when called:    3
   800 ;; This function calls:
   801 ;;		_initLCD
   802 ;;		_lcdInst
   803 ;;		_printf
   804 ;;		_putch
   805 ;; This function is called by:
   806 ;;		Startup code after reset
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text0
   811  00F21E                     __ptext0:
   812                           	opt stack 0
   813  00F21E                     _main:
   814                           	opt stack 28
   815                           
   816                           ;main.c: 22: LATA = 0x00;
   817                           
   818                           ;incstack = 0
   819  00F21E  0E00               	movlw	0
   820  00F220  6E89               	movwf	3977,c	;volatile
   821                           
   822                           ;main.c: 23: LATB = 0x00;
   823  00F222  0E00               	movlw	0
   824  00F224  6E8A               	movwf	3978,c	;volatile
   825                           
   826                           ;main.c: 24: LATC = 0x00;
   827  00F226  0E00               	movlw	0
   828  00F228  6E8B               	movwf	3979,c	;volatile
   829                           
   830                           ;main.c: 25: LATD = 0x00;
   831  00F22A  0E00               	movlw	0
   832  00F22C  6E8C               	movwf	3980,c	;volatile
   833                           
   834                           ;main.c: 26: LATE = 0x00;
   835  00F22E  0E00               	movlw	0
   836  00F230  6E8D               	movwf	3981,c	;volatile
   837                           
   838                           ;main.c: 30: TRISA = 0xFF;
   839  00F232  6892               	setf	3986,c	;volatile
   840                           
   841                           ;main.c: 31: TRISB = 0xFF;
   842  00F234  6893               	setf	3987,c	;volatile
   843                           
   844                           ;main.c: 32: TRISC = 0x00;
   845  00F236  0E00               	movlw	0
   846  00F238  6E94               	movwf	3988,c	;volatile
   847                           
   848                           ;main.c: 33: TRISD = 0x00;
   849  00F23A  0E00               	movlw	0
   850  00F23C  6E95               	movwf	3989,c	;volatile
   851                           
   852                           ;main.c: 34: TRISE = 0x00;
   853  00F23E  0E00               	movlw	0
   854  00F240  6E96               	movwf	3990,c	;volatile
   855                           
   856                           ;main.c: 37: ADCON0 = 0x00;
   857  00F242  0E00               	movlw	0
   858  00F244  6EC2               	movwf	4034,c	;volatile
   859                           
   860                           ;main.c: 38: ADCON1 = 0b00001111;
   861  00F246  0E0F               	movlw	15
   862  00F248  6EC1               	movwf	4033,c	;volatile
   863                           
   864                           ;main.c: 41: initLCD();
   865  00F24A  ECAA  F078         	call	_initLCD	;wreg free
   866                           
   867                           ;main.c: 48: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
   868  00F24E  0E0C               	movlw	12
   869  00F250  EC81  F078         	call	_lcdInst
   870                           
   871                           ;main.c: 49: printf("Standby");
   872  00F254  0EEF               	movlw	low STR_1
   873  00F256  6E04               	movwf	printf@f,c
   874  00F258  0EFC               	movlw	high STR_1
   875  00F25A  6E05               	movwf	printf@f+1,c
   876  00F25C  EC95  F078         	call	_printf	;wreg free
   877                           
   878                           ;main.c: 50: _delay((unsigned long)((2000)*(40000000/4000.0)));
   879  00F260  0E66               	movlw	102
   880  00F262  6E0A               	movwf	(??_main+1)& (0+255),c
   881  00F264  0E76               	movlw	118
   882  00F266  6E09               	movwf	??_main& (0+255),c
   883  00F268  0EC1               	movlw	193
   884  00F26A                     u1167:
   885  00F26A  2EE8               	decfsz	wreg,f,c
   886  00F26C  D7FE               	bra	u1167
   887  00F26E  2E09               	decfsz	??_main& (0+255),f,c
   888  00F270  D7FC               	bra	u1167
   889  00F272  2E0A               	decfsz	(??_main+1)& (0+255),f,c
   890  00F274  D7FA               	bra	u1167
   891  00F276  F000               	nop	
   892                           
   893                           ;main.c: 51: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
   894  00F278  0E01               	movlw	1
   895  00F27A  EC81  F078         	call	_lcdInst
   896  00F27E  0EC3               	movlw	195
   897  00F280  6E09               	movwf	??_main& (0+255),c
   898  00F282  0ECD               	movlw	205
   899  00F284                     u1177:
   900  00F284  2EE8               	decfsz	wreg,f,c
   901  00F286  D7FE               	bra	u1177
   902  00F288  2E09               	decfsz	??_main& (0+255),f,c
   903  00F28A  D7FC               	bra	u1177
   904  00F28C  F000               	nop	
   905                           
   906                           ;main.c: 52: printf("Press any key to");
   907  00F28E  0E85               	movlw	low STR_2
   908  00F290  6E04               	movwf	printf@f,c
   909  00F292  0EFB               	movlw	high STR_2
   910  00F294  6E05               	movwf	printf@f+1,c
   911  00F296  EC95  F078         	call	_printf	;wreg free
   912                           
   913                           ;main.c: 53: lcdInst(0xC0);;
   914  00F29A  0EC0               	movlw	192
   915  00F29C  EC81  F078         	call	_lcdInst
   916                           
   917                           ;main.c: 54: printf("begin operation.");
   918  00F2A0  0E74               	movlw	low STR_3
   919  00F2A2  6E04               	movwf	printf@f,c
   920  00F2A4  0EFB               	movlw	high STR_3
   921  00F2A6  6E05               	movwf	printf@f+1,c
   922  00F2A8  EC95  F078         	call	_printf	;wreg free
   923  00F2AC                     
   924                           ;main.c: 57: continue;
   925  00F2AC  A281               	btfss	3969,1,c	;volatile
   926  00F2AE  D7FE               	goto	l64
   927                           
   928                           ;main.c: 58: }
   929                           ;main.c: 61: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
   930  00F2B0  0E01               	movlw	1
   931  00F2B2  EC81  F078         	call	_lcdInst
   932  00F2B6  0EC3               	movlw	195
   933  00F2B8  6E09               	movwf	??_main& (0+255),c
   934  00F2BA  0ECD               	movlw	205
   935  00F2BC                     u1187:
   936  00F2BC  2EE8               	decfsz	wreg,f,c
   937  00F2BE  D7FE               	bra	u1187
   938  00F2C0  2E09               	decfsz	??_main& (0+255),f,c
   939  00F2C2  D7FC               	bra	u1187
   940  00F2C4  F000               	nop	
   941                           
   942                           ;main.c: 62: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
   943  00F2C6  0E0C               	movlw	12
   944  00F2C8  EC81  F078         	call	_lcdInst
   945                           
   946                           ;main.c: 63: printf("Welcome to your");
   947  00F2CC  0EA6               	movlw	low STR_4
   948  00F2CE  6E04               	movwf	printf@f,c
   949  00F2D0  0EFB               	movlw	high STR_4
   950  00F2D2  6E05               	movwf	printf@f+1,c
   951  00F2D4  EC95  F078         	call	_printf	;wreg free
   952                           
   953                           ;main.c: 64: lcdInst(0xC0);;
   954  00F2D8  0EC0               	movlw	192
   955  00F2DA  EC81  F078         	call	_lcdInst
   956                           
   957                           ;main.c: 65: printf("cabinet sorter!");
   958  00F2DE  0E96               	movlw	low STR_5
   959  00F2E0  6E04               	movwf	printf@f,c
   960  00F2E2  0EFB               	movlw	high STR_5
   961  00F2E4  6E05               	movwf	printf@f+1,c
   962  00F2E6  EC95  F078         	call	_printf	;wreg free
   963                           
   964                           ;main.c: 66: _delay((unsigned long)((2000)*(40000000/4000.0)));
   965  00F2EA  0E66               	movlw	102
   966  00F2EC  6E0A               	movwf	(??_main+1)& (0+255),c
   967  00F2EE  0E76               	movlw	118
   968  00F2F0  6E09               	movwf	??_main& (0+255),c
   969  00F2F2  0EC1               	movlw	193
   970  00F2F4                     u1197:
   971  00F2F4  2EE8               	decfsz	wreg,f,c
   972  00F2F6  D7FE               	bra	u1197
   973  00F2F8  2E09               	decfsz	??_main& (0+255),f,c
   974  00F2FA  D7FC               	bra	u1197
   975  00F2FC  2E0A               	decfsz	(??_main+1)& (0+255),f,c
   976  00F2FE  D7FA               	bra	u1197
   977  00F300  F000               	nop	
   978                           
   979                           ;main.c: 67: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
   980  00F302  0E01               	movlw	1
   981  00F304  EC81  F078         	call	_lcdInst
   982  00F308  0EC3               	movlw	195
   983  00F30A  6E09               	movwf	??_main& (0+255),c
   984  00F30C  0ECD               	movlw	205
   985  00F30E                     u1207:
   986  00F30E  2EE8               	decfsz	wreg,f,c
   987  00F310  D7FE               	bra	u1207
   988  00F312  2E09               	decfsz	??_main& (0+255),f,c
   989  00F314  D7FC               	bra	u1207
   990  00F316  F000               	nop	
   991                           
   992                           ;main.c: 69: printf("Please insert");
   993  00F318  0EEF               	movlw	low STR_6
   994  00F31A  6E04               	movwf	printf@f,c
   995  00F31C  0EFB               	movlw	high STR_6
   996  00F31E  6E05               	movwf	printf@f+1,c
   997  00F320  EC95  F078         	call	_printf	;wreg free
   998                           
   999                           ;main.c: 70: lcdInst(0xC0);;
  1000  00F324  0EC0               	movlw	192
  1001  00F326  EC81  F078         	call	_lcdInst
  1002                           
  1003                           ;main.c: 71: printf("the cabinet,");
  1004  00F32A  0EFD               	movlw	low STR_7
  1005  00F32C  6E04               	movwf	printf@f,c
  1006  00F32E  0EFB               	movlw	high STR_7
  1007  00F330  6E05               	movwf	printf@f+1,c
  1008  00F332  EC95  F078         	call	_printf	;wreg free
  1009                           
  1010                           ;main.c: 72: _delay((unsigned long)((2000)*(40000000/4000.0)));
  1011  00F336  0E66               	movlw	102
  1012  00F338  6E0A               	movwf	(??_main+1)& (0+255),c
  1013  00F33A  0E76               	movlw	118
  1014  00F33C  6E09               	movwf	??_main& (0+255),c
  1015  00F33E  0EC1               	movlw	193
  1016  00F340                     u1217:
  1017  00F340  2EE8               	decfsz	wreg,f,c
  1018  00F342  D7FE               	bra	u1217
  1019  00F344  2E09               	decfsz	??_main& (0+255),f,c
  1020  00F346  D7FC               	bra	u1217
  1021  00F348  2E0A               	decfsz	(??_main+1)& (0+255),f,c
  1022  00F34A  D7FA               	bra	u1217
  1023  00F34C  F000               	nop	
  1024                           
  1025                           ;main.c: 73: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1026  00F34E  0E01               	movlw	1
  1027  00F350  EC81  F078         	call	_lcdInst
  1028  00F354  0EC3               	movlw	195
  1029  00F356  6E09               	movwf	??_main& (0+255),c
  1030  00F358  0ECD               	movlw	205
  1031  00F35A                     u1227:
  1032  00F35A  2EE8               	decfsz	wreg,f,c
  1033  00F35C  D7FE               	bra	u1227
  1034  00F35E  2E09               	decfsz	??_main& (0+255),f,c
  1035  00F360  D7FC               	bra	u1227
  1036  00F362  F000               	nop	
  1037                           
  1038                           ;main.c: 74: printf("then press any");
  1039  00F364  0EB6               	movlw	low STR_8
  1040  00F366  6E04               	movwf	printf@f,c
  1041  00F368  0EFB               	movlw	high STR_8
  1042  00F36A  6E05               	movwf	printf@f+1,c
  1043  00F36C  EC95  F078         	call	_printf	;wreg free
  1044                           
  1045                           ;main.c: 75: lcdInst(0xC0);;
  1046  00F370  0EC0               	movlw	192
  1047  00F372  EC81  F078         	call	_lcdInst
  1048                           
  1049                           ;main.c: 76: printf("key to continue.");
  1050  00F376  0E63               	movlw	low STR_9
  1051  00F378  6E04               	movwf	printf@f,c
  1052  00F37A  0EFB               	movlw	high STR_9
  1053  00F37C  6E05               	movwf	printf@f+1,c
  1054  00F37E  EC95  F078         	call	_printf	;wreg free
  1055  00F382                     
  1056                           ;main.c: 79: continue;
  1057  00F382  A281               	btfss	3969,1,c	;volatile
  1058  00F384  D7FE               	goto	l67
  1059                           
  1060                           ;main.c: 80: }
  1061                           ;main.c: 81: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1062  00F386  0E01               	movlw	1
  1063  00F388  EC81  F078         	call	_lcdInst
  1064  00F38C  0EC3               	movlw	195
  1065  00F38E  6E09               	movwf	??_main& (0+255),c
  1066  00F390  0ECD               	movlw	205
  1067  00F392                     u1237:
  1068  00F392  2EE8               	decfsz	wreg,f,c
  1069  00F394  D7FE               	bra	u1237
  1070  00F396  2E09               	decfsz	??_main& (0+255),f,c
  1071  00F398  D7FC               	bra	u1237
  1072  00F39A  F000               	nop	
  1073                           
  1074                           ;main.c: 83: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
  1075  00F39C  0E0C               	movlw	12
  1076  00F39E  EC81  F078         	call	_lcdInst
  1077                           
  1078                           ;main.c: 84: printf("Great!");
  1079  00F3A2  0EF7               	movlw	low STR_10
  1080  00F3A4  6E04               	movwf	printf@f,c
  1081  00F3A6  0EFC               	movlw	high STR_10
  1082  00F3A8  6E05               	movwf	printf@f+1,c
  1083  00F3AA  EC95  F078         	call	_printf	;wreg free
  1084                           
  1085                           ;main.c: 85: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1086  00F3AE  0E33               	movlw	51
  1087  00F3B0  6E0A               	movwf	(??_main+1)& (0+255),c
  1088  00F3B2  0EBB               	movlw	187
  1089  00F3B4  6E09               	movwf	??_main& (0+255),c
  1090  00F3B6  0EE0               	movlw	224
  1091  00F3B8                     u1247:
  1092  00F3B8  2EE8               	decfsz	wreg,f,c
  1093  00F3BA  D7FE               	bra	u1247
  1094  00F3BC  2E09               	decfsz	??_main& (0+255),f,c
  1095  00F3BE  D7FC               	bra	u1247
  1096  00F3C0  2E0A               	decfsz	(??_main+1)& (0+255),f,c
  1097  00F3C2  D7FA               	bra	u1247
  1098                           
  1099                           ;main.c: 86: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1100  00F3C4  0E01               	movlw	1
  1101  00F3C6  EC81  F078         	call	_lcdInst
  1102  00F3CA  0EC3               	movlw	195
  1103  00F3CC  6E09               	movwf	??_main& (0+255),c
  1104  00F3CE  0ECD               	movlw	205
  1105  00F3D0                     u1257:
  1106  00F3D0  2EE8               	decfsz	wreg,f,c
  1107  00F3D2  D7FE               	bra	u1257
  1108  00F3D4  2E09               	decfsz	??_main& (0+255),f,c
  1109  00F3D6  D7FC               	bra	u1257
  1110  00F3D8  F000               	nop	
  1111                           
  1112                           ;main.c: 88: printf("Please insert");
  1113  00F3DA  0EEF               	movlw	low STR_6
  1114  00F3DC  6E04               	movwf	printf@f,c
  1115  00F3DE  0EFB               	movlw	high STR_6
  1116  00F3E0  6E05               	movwf	printf@f+1,c
  1117  00F3E2  EC95  F078         	call	_printf	;wreg free
  1118                           
  1119                           ;main.c: 89: lcdInst(0xC0);;
  1120  00F3E6  0EC0               	movlw	192
  1121  00F3E8  EC81  F078         	call	_lcdInst
  1122                           
  1123                           ;main.c: 90: printf("the rat food,");
  1124  00F3EC  0EC5               	movlw	low STR_12
  1125  00F3EE  6E04               	movwf	printf@f,c
  1126  00F3F0  0EFB               	movlw	high STR_12
  1127  00F3F2  6E05               	movwf	printf@f+1,c
  1128  00F3F4  EC95  F078         	call	_printf	;wreg free
  1129                           
  1130                           ;main.c: 91: _delay((unsigned long)((2000)*(40000000/4000.0)));
  1131  00F3F8  0E66               	movlw	102
  1132  00F3FA  6E0A               	movwf	(??_main+1)& (0+255),c
  1133  00F3FC  0E76               	movlw	118
  1134  00F3FE  6E09               	movwf	??_main& (0+255),c
  1135  00F400  0EC1               	movlw	193
  1136  00F402                     u1267:
  1137  00F402  2EE8               	decfsz	wreg,f,c
  1138  00F404  D7FE               	bra	u1267
  1139  00F406  2E09               	decfsz	??_main& (0+255),f,c
  1140  00F408  D7FC               	bra	u1267
  1141  00F40A  2E0A               	decfsz	(??_main+1)& (0+255),f,c
  1142  00F40C  D7FA               	bra	u1267
  1143  00F40E  F000               	nop	
  1144                           
  1145                           ;main.c: 92: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1146  00F410  0E01               	movlw	1
  1147  00F412  EC81  F078         	call	_lcdInst
  1148  00F416  0EC3               	movlw	195
  1149  00F418  6E09               	movwf	??_main& (0+255),c
  1150  00F41A  0ECD               	movlw	205
  1151  00F41C                     u1277:
  1152  00F41C  2EE8               	decfsz	wreg,f,c
  1153  00F41E  D7FE               	bra	u1277
  1154  00F420  2E09               	decfsz	??_main& (0+255),f,c
  1155  00F422  D7FC               	bra	u1277
  1156  00F424  F000               	nop	
  1157                           
  1158                           ;main.c: 93: printf("then press any");
  1159  00F426  0EB6               	movlw	low STR_8
  1160  00F428  6E04               	movwf	printf@f,c
  1161  00F42A  0EFB               	movlw	high STR_8
  1162  00F42C  6E05               	movwf	printf@f+1,c
  1163  00F42E  EC95  F078         	call	_printf	;wreg free
  1164                           
  1165                           ;main.c: 94: lcdInst(0xC0);;
  1166  00F432  0EC0               	movlw	192
  1167  00F434  EC81  F078         	call	_lcdInst
  1168                           
  1169                           ;main.c: 95: printf("key to continue.");
  1170  00F438  0E63               	movlw	low STR_9
  1171  00F43A  6E04               	movwf	printf@f,c
  1172  00F43C  0EFB               	movlw	high STR_9
  1173  00F43E  6E05               	movwf	printf@f+1,c
  1174  00F440  EC95  F078         	call	_printf	;wreg free
  1175  00F444                     
  1176                           ;main.c: 98: continue;
  1177  00F444  A281               	btfss	3969,1,c	;volatile
  1178  00F446  D7FE               	goto	l70
  1179                           
  1180                           ;main.c: 99: }
  1181                           ;main.c: 103: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1182  00F448  0E01               	movlw	1
  1183  00F44A  EC81  F078         	call	_lcdInst
  1184  00F44E  0EC3               	movlw	195
  1185  00F450  6E09               	movwf	??_main& (0+255),c
  1186  00F452  0ECD               	movlw	205
  1187  00F454                     u1287:
  1188  00F454  2EE8               	decfsz	wreg,f,c
  1189  00F456  D7FE               	bra	u1287
  1190  00F458  2E09               	decfsz	??_main& (0+255),f,c
  1191  00F45A  D7FC               	bra	u1287
  1192  00F45C  F000               	nop	
  1193                           
  1194                           ;main.c: 104: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
  1195  00F45E  0E0C               	movlw	12
  1196  00F460  EC81  F078         	call	_lcdInst
  1197                           
  1198                           ;main.c: 105: printf("Fantastic!");
  1199  00F464  0E3D               	movlw	low STR_15
  1200  00F466  6E04               	movwf	printf@f,c
  1201  00F468  0EFC               	movlw	high STR_15
  1202  00F46A  6E05               	movwf	printf@f+1,c
  1203  00F46C  EC95  F078         	call	_printf	;wreg free
  1204                           
  1205                           ;main.c: 106: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1206  00F470  0E33               	movlw	51
  1207  00F472  6E0A               	movwf	(??_main+1)& (0+255),c
  1208  00F474  0EBB               	movlw	187
  1209  00F476  6E09               	movwf	??_main& (0+255),c
  1210  00F478  0EE0               	movlw	224
  1211  00F47A                     u1297:
  1212  00F47A  2EE8               	decfsz	wreg,f,c
  1213  00F47C  D7FE               	bra	u1297
  1214  00F47E  2E09               	decfsz	??_main& (0+255),f,c
  1215  00F480  D7FC               	bra	u1297
  1216  00F482  2E0A               	decfsz	(??_main+1)& (0+255),f,c
  1217  00F484  D7FA               	bra	u1297
  1218                           
  1219                           ;main.c: 108: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1220  00F486  0E01               	movlw	1
  1221  00F488  EC81  F078         	call	_lcdInst
  1222  00F48C  0EC3               	movlw	195
  1223  00F48E  6E09               	movwf	??_main& (0+255),c
  1224  00F490  0ECD               	movlw	205
  1225  00F492                     u1307:
  1226  00F492  2EE8               	decfsz	wreg,f,c
  1227  00F494  D7FE               	bra	u1307
  1228  00F496  2E09               	decfsz	??_main& (0+255),f,c
  1229  00F498  D7FC               	bra	u1307
  1230  00F49A  F000               	nop	
  1231                           
  1232                           ;main.c: 109: printf("Please input");
  1233  00F49C  0E24               	movlw	low STR_16
  1234  00F49E  6E04               	movwf	printf@f,c
  1235  00F4A0  0EFC               	movlw	high STR_16
  1236  00F4A2  6E05               	movwf	printf@f+1,c
  1237  00F4A4  EC95  F078         	call	_printf	;wreg free
  1238                           
  1239                           ;main.c: 110: lcdInst(0xC0);;
  1240  00F4A8  0EC0               	movlw	192
  1241  00F4AA  EC81  F078         	call	_lcdInst
  1242                           
  1243                           ;main.c: 111: printf("drawer info.");
  1244  00F4AE  0E0A               	movlw	low STR_17
  1245  00F4B0  6E04               	movwf	printf@f,c
  1246  00F4B2  0EFC               	movlw	high STR_17
  1247  00F4B4  6E05               	movwf	printf@f+1,c
  1248  00F4B6  EC95  F078         	call	_printf	;wreg free
  1249                           
  1250                           ;main.c: 112: _delay((unsigned long)((2000)*(40000000/4000.0)));
  1251  00F4BA  0E66               	movlw	102
  1252  00F4BC  6E0A               	movwf	(??_main+1)& (0+255),c
  1253  00F4BE  0E76               	movlw	118
  1254  00F4C0  6E09               	movwf	??_main& (0+255),c
  1255  00F4C2  0EC1               	movlw	193
  1256  00F4C4                     u1317:
  1257  00F4C4  2EE8               	decfsz	wreg,f,c
  1258  00F4C6  D7FE               	bra	u1317
  1259  00F4C8  2E09               	decfsz	??_main& (0+255),f,c
  1260  00F4CA  D7FC               	bra	u1317
  1261  00F4CC  2E0A               	decfsz	(??_main+1)& (0+255),f,c
  1262  00F4CE  D7FA               	bra	u1317
  1263  00F4D0  F000               	nop	
  1264                           
  1265                           ;main.c: 114: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1266  00F4D2  0E01               	movlw	1
  1267  00F4D4  EC81  F078         	call	_lcdInst
  1268  00F4D8  0EC3               	movlw	195
  1269  00F4DA  6E09               	movwf	??_main& (0+255),c
  1270  00F4DC  0ECD               	movlw	205
  1271  00F4DE                     u1327:
  1272  00F4DE  2EE8               	decfsz	wreg,f,c
  1273  00F4E0  D7FE               	bra	u1327
  1274  00F4E2  2E09               	decfsz	??_main& (0+255),f,c
  1275  00F4E4  D7FC               	bra	u1327
  1276  00F4E6  F000               	nop	
  1277                           
  1278                           ;main.c: 115: printf("Keys A = R;");
  1279  00F4E8  0E31               	movlw	low STR_18
  1280  00F4EA  6E04               	movwf	printf@f,c
  1281  00F4EC  0EFC               	movlw	high STR_18
  1282  00F4EE  6E05               	movwf	printf@f+1,c
  1283  00F4F0  EC95  F078         	call	_printf	;wreg free
  1284                           
  1285                           ;main.c: 116: lcdInst(0xC0);;
  1286  00F4F4  0EC0               	movlw	192
  1287  00F4F6  EC81  F078         	call	_lcdInst
  1288                           
  1289                           ;main.c: 117: printf("B = F; C = L.");
  1290  00F4FA  0ED3               	movlw	low STR_19
  1291  00F4FC  6E04               	movwf	printf@f,c
  1292  00F4FE  0EFB               	movlw	high STR_19
  1293  00F500  6E05               	movwf	printf@f+1,c
  1294  00F502  EC95  F078         	call	_printf	;wreg free
  1295                           
  1296                           ;main.c: 118: _delay((unsigned long)((3000)*(40000000/4000.0)));
  1297  00F506  0E99               	movlw	153
  1298  00F508  6E0A               	movwf	(??_main+1)& (0+255),c
  1299  00F50A  0E31               	movlw	49
  1300  00F50C  6E09               	movwf	??_main& (0+255),c
  1301  00F50E  0EA2               	movlw	162
  1302  00F510                     u1337:
  1303  00F510  2EE8               	decfsz	wreg,f,c
  1304  00F512  D7FE               	bra	u1337
  1305  00F514  2E09               	decfsz	??_main& (0+255),f,c
  1306  00F516  D7FC               	bra	u1337
  1307  00F518  2E0A               	decfsz	(??_main+1)& (0+255),f,c
  1308  00F51A  D7FA               	bra	u1337
  1309  00F51C  D000               	nop2	
  1310                           
  1311                           ;main.c: 120: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1312  00F51E  0E01               	movlw	1
  1313  00F520  EC81  F078         	call	_lcdInst
  1314  00F524  0EC3               	movlw	195
  1315  00F526  6E09               	movwf	??_main& (0+255),c
  1316  00F528  0ECD               	movlw	205
  1317  00F52A                     u1347:
  1318  00F52A  2EE8               	decfsz	wreg,f,c
  1319  00F52C  D7FE               	bra	u1347
  1320  00F52E  2E09               	decfsz	??_main& (0+255),f,c
  1321  00F530  D7FC               	bra	u1347
  1322  00F532  F000               	nop	
  1323                           
  1324                           ;main.c: 121: printf("Press # after");
  1325  00F534  0EE1               	movlw	low STR_20
  1326  00F536  6E04               	movwf	printf@f,c
  1327  00F538  0EFB               	movlw	high STR_20
  1328  00F53A  6E05               	movwf	printf@f+1,c
  1329  00F53C  EC95  F078         	call	_printf	;wreg free
  1330                           
  1331                           ;main.c: 122: lcdInst(0xC0);;
  1332  00F540  0EC0               	movlw	192
  1333  00F542  EC81  F078         	call	_lcdInst
  1334                           
  1335                           ;main.c: 123: printf("each drawer.");
  1336  00F546  0E17               	movlw	low STR_21
  1337  00F548  6E04               	movwf	printf@f,c
  1338  00F54A  0EFC               	movlw	high STR_21
  1339  00F54C  6E05               	movwf	printf@f+1,c
  1340  00F54E  EC95  F078         	call	_printf	;wreg free
  1341                           
  1342                           ;main.c: 124: _delay((unsigned long)((3000)*(40000000/4000.0)));
  1343  00F552  0E99               	movlw	153
  1344  00F554  6E0A               	movwf	(??_main+1)& (0+255),c
  1345  00F556  0E31               	movlw	49
  1346  00F558  6E09               	movwf	??_main& (0+255),c
  1347  00F55A  0EA2               	movlw	162
  1348  00F55C                     u1357:
  1349  00F55C  2EE8               	decfsz	wreg,f,c
  1350  00F55E  D7FE               	bra	u1357
  1351  00F560  2E09               	decfsz	??_main& (0+255),f,c
  1352  00F562  D7FC               	bra	u1357
  1353  00F564  2E0A               	decfsz	(??_main+1)& (0+255),f,c
  1354  00F566  D7FA               	bra	u1357
  1355  00F568  D000               	nop2	
  1356                           
  1357                           ;main.c: 128: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1358  00F56A  0E01               	movlw	1
  1359  00F56C  EC81  F078         	call	_lcdInst
  1360  00F570  0EC3               	movlw	195
  1361  00F572  6E09               	movwf	??_main& (0+255),c
  1362  00F574  0ECD               	movlw	205
  1363  00F576                     u1367:
  1364  00F576  2EE8               	decfsz	wreg,f,c
  1365  00F578  D7FE               	bra	u1367
  1366  00F57A  2E09               	decfsz	??_main& (0+255),f,c
  1367  00F57C  D7FC               	bra	u1367
  1368  00F57E  F000               	nop	
  1369                           
  1370                           ;main.c: 129: printf("Drawer 1:");
  1371  00F580  0E95               	movlw	low STR_22
  1372  00F582  6E04               	movwf	printf@f,c
  1373  00F584  0EFC               	movlw	high STR_22
  1374  00F586  6E05               	movwf	printf@f+1,c
  1375  00F588  EC95  F078         	call	_printf	;wreg free
  1376                           
  1377                           ;main.c: 130: lcdInst(0xC0);;
  1378  00F58C  0EC0               	movlw	192
  1379  00F58E  EC81  F078         	call	_lcdInst
  1380  00F592                     
  1381                           ;main.c: 133: while(PORTBbits.RB1 == 0){ continue; }
  1382  00F592  A281               	btfss	3969,1,c	;volatile
  1383  00F594  D7FE               	goto	l72
  1384                           
  1385                           ;main.c: 136: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1386  00F596  3881               	swapf	3969,w,c	;volatile
  1387  00F598  0B0F               	andlw	15
  1388  00F59A  0B0F               	andlw	15
  1389  00F59C  6E0D               	movwf	main@keypress,c
  1390  00F59E  B281               	btfsc	3969,1,c	;volatile
  1391  00F5A0  D7FE               	goto	l77
  1392                           
  1393                           ;main.c: 141: if(keypress == 14){
  1394  00F5A2  0E0E               	movlw	14
  1395  00F5A4  180D               	xorwf	main@keypress,w,c
  1396  00F5A6  B4D8               	btfsc	status,2,c
  1397  00F5A8  D00D               	goto	l80
  1398                           
  1399                           ;main.c: 144: else{
  1400                           ;main.c: 145: putch(input[keypress]);
  1401                           
  1402                           ;main.c: 143: }
  1403                           
  1404                           ;main.c: 142: break;
  1405  00F5AA  500D               	movf	main@keypress,w,c
  1406  00F5AC  0D01               	mullw	1
  1407  00F5AE  0E3B               	movlw	low _input
  1408  00F5B0  24F3               	addwf	prodl,w,c
  1409  00F5B2  6EF6               	movwf	tblptrl,c
  1410  00F5B4  0EFB               	movlw	high _input
  1411  00F5B6  20F4               	addwfc	prodh,w,c
  1412  00F5B8  6EF7               	movwf	tblptrh,c
  1413  00F5BA                     	if	0	;There are less than 3 active tblptr bytes
  1414  00F5BA                     	endif
  1415  00F5BA  0008               	tblrd		*
  1416  00F5BC  50F5               	movf	tablat,w,c
  1417  00F5BE  EC8B  F078         	call	_putch
  1418  00F5C2  D7E7               	goto	l72
  1419  00F5C4                     l80:
  1420                           
  1421                           ;main.c: 146: }
  1422                           ;main.c: 147: }
  1423                           ;main.c: 151: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1424  00F5C4  0E01               	movlw	1
  1425  00F5C6  EC81  F078         	call	_lcdInst
  1426  00F5CA  0EC3               	movlw	195
  1427  00F5CC  6E09               	movwf	??_main& (0+255),c
  1428  00F5CE  0ECD               	movlw	205
  1429  00F5D0                     u1377:
  1430  00F5D0  2EE8               	decfsz	wreg,f,c
  1431  00F5D2  D7FE               	bra	u1377
  1432  00F5D4  2E09               	decfsz	??_main& (0+255),f,c
  1433  00F5D6  D7FC               	bra	u1377
  1434  00F5D8  F000               	nop	
  1435                           
  1436                           ;main.c: 152: printf("Drawer 2:");
  1437  00F5DA  0E9F               	movlw	low STR_23
  1438  00F5DC  6E04               	movwf	printf@f,c
  1439  00F5DE  0EFC               	movlw	high STR_23
  1440  00F5E0  6E05               	movwf	printf@f+1,c
  1441  00F5E2  EC95  F078         	call	_printf	;wreg free
  1442                           
  1443                           ;main.c: 153: lcdInst(0xC0);;
  1444  00F5E6  0EC0               	movlw	192
  1445  00F5E8  EC81  F078         	call	_lcdInst
  1446  00F5EC                     
  1447                           ;main.c: 156: while(PORTBbits.RB1 == 0){ continue; }
  1448  00F5EC  A281               	btfss	3969,1,c	;volatile
  1449  00F5EE  D7FE               	goto	l83
  1450                           
  1451                           ;main.c: 159: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1452  00F5F0  3881               	swapf	3969,w,c	;volatile
  1453  00F5F2  0B0F               	andlw	15
  1454  00F5F4  0B0F               	andlw	15
  1455  00F5F6  6E0E               	movwf	main@keypress_175,c
  1456  00F5F8  B281               	btfsc	3969,1,c	;volatile
  1457  00F5FA  D7FE               	goto	l88
  1458                           
  1459                           ;main.c: 164: if(keypress == 14){
  1460  00F5FC  0E0E               	movlw	14
  1461  00F5FE  180E               	xorwf	main@keypress_175,w,c
  1462  00F600  B4D8               	btfsc	status,2,c
  1463  00F602  D00D               	goto	l91
  1464                           
  1465                           ;main.c: 167: else{
  1466                           ;main.c: 168: putch(input[keypress]);
  1467                           
  1468                           ;main.c: 166: }
  1469                           
  1470                           ;main.c: 165: break;
  1471  00F604  500E               	movf	main@keypress_175,w,c
  1472  00F606  0D01               	mullw	1
  1473  00F608  0E3B               	movlw	low _input
  1474  00F60A  24F3               	addwf	prodl,w,c
  1475  00F60C  6EF6               	movwf	tblptrl,c
  1476  00F60E  0EFB               	movlw	high _input
  1477  00F610  20F4               	addwfc	prodh,w,c
  1478  00F612  6EF7               	movwf	tblptrh,c
  1479  00F614                     	if	0	;There are less than 3 active tblptr bytes
  1480  00F614                     	endif
  1481  00F614  0008               	tblrd		*
  1482  00F616  50F5               	movf	tablat,w,c
  1483  00F618  EC8B  F078         	call	_putch
  1484  00F61C  D7E7               	goto	l83
  1485  00F61E                     l91:
  1486                           
  1487                           ;main.c: 169: }
  1488                           ;main.c: 170: }
  1489                           ;main.c: 174: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1490  00F61E  0E01               	movlw	1
  1491  00F620  EC81  F078         	call	_lcdInst
  1492  00F624  0EC3               	movlw	195
  1493  00F626  6E09               	movwf	??_main& (0+255),c
  1494  00F628  0ECD               	movlw	205
  1495  00F62A                     u1387:
  1496  00F62A  2EE8               	decfsz	wreg,f,c
  1497  00F62C  D7FE               	bra	u1387
  1498  00F62E  2E09               	decfsz	??_main& (0+255),f,c
  1499  00F630  D7FC               	bra	u1387
  1500  00F632  F000               	nop	
  1501                           
  1502                           ;main.c: 175: printf("Drawer 3:");
  1503  00F634  0EA9               	movlw	low STR_24
  1504  00F636  6E04               	movwf	printf@f,c
  1505  00F638  0EFC               	movlw	high STR_24
  1506  00F63A  6E05               	movwf	printf@f+1,c
  1507  00F63C  EC95  F078         	call	_printf	;wreg free
  1508                           
  1509                           ;main.c: 176: lcdInst(0xC0);;
  1510  00F640  0EC0               	movlw	192
  1511  00F642  EC81  F078         	call	_lcdInst
  1512  00F646                     
  1513                           ;main.c: 179: while(PORTBbits.RB1 == 0){ continue; }
  1514  00F646  A281               	btfss	3969,1,c	;volatile
  1515  00F648  D7FE               	goto	l94
  1516                           
  1517                           ;main.c: 182: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1518  00F64A  3881               	swapf	3969,w,c	;volatile
  1519  00F64C  0B0F               	andlw	15
  1520  00F64E  0B0F               	andlw	15
  1521  00F650  6E0F               	movwf	main@keypress_177,c
  1522  00F652  B281               	btfsc	3969,1,c	;volatile
  1523  00F654  D7FE               	goto	l99
  1524                           
  1525                           ;main.c: 187: if(keypress == 14){
  1526  00F656  0E0E               	movlw	14
  1527  00F658  180F               	xorwf	main@keypress_177,w,c
  1528  00F65A  B4D8               	btfsc	status,2,c
  1529  00F65C  D00D               	goto	l102
  1530                           
  1531                           ;main.c: 190: else{
  1532                           ;main.c: 191: putch(input[keypress]);
  1533                           
  1534                           ;main.c: 189: }
  1535                           
  1536                           ;main.c: 188: break;
  1537  00F65E  500F               	movf	main@keypress_177,w,c
  1538  00F660  0D01               	mullw	1
  1539  00F662  0E3B               	movlw	low _input
  1540  00F664  24F3               	addwf	prodl,w,c
  1541  00F666  6EF6               	movwf	tblptrl,c
  1542  00F668  0EFB               	movlw	high _input
  1543  00F66A  20F4               	addwfc	prodh,w,c
  1544  00F66C  6EF7               	movwf	tblptrh,c
  1545  00F66E                     	if	0	;There are less than 3 active tblptr bytes
  1546  00F66E                     	endif
  1547  00F66E  0008               	tblrd		*
  1548  00F670  50F5               	movf	tablat,w,c
  1549  00F672  EC8B  F078         	call	_putch
  1550  00F676  D7E7               	goto	l94
  1551  00F678                     l102:
  1552                           
  1553                           ;main.c: 192: }
  1554                           ;main.c: 193: }
  1555                           ;main.c: 197: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1556  00F678  0E01               	movlw	1
  1557  00F67A  EC81  F078         	call	_lcdInst
  1558  00F67E  0EC3               	movlw	195
  1559  00F680  6E09               	movwf	??_main& (0+255),c
  1560  00F682  0ECD               	movlw	205
  1561  00F684                     u1397:
  1562  00F684  2EE8               	decfsz	wreg,f,c
  1563  00F686  D7FE               	bra	u1397
  1564  00F688  2E09               	decfsz	??_main& (0+255),f,c
  1565  00F68A  D7FC               	bra	u1397
  1566  00F68C  F000               	nop	
  1567                           
  1568                           ;main.c: 198: printf("Drawer 4:");
  1569  00F68E  0EB3               	movlw	low STR_25
  1570  00F690  6E04               	movwf	printf@f,c
  1571  00F692  0EFC               	movlw	high STR_25
  1572  00F694  6E05               	movwf	printf@f+1,c
  1573  00F696  EC95  F078         	call	_printf	;wreg free
  1574                           
  1575                           ;main.c: 199: lcdInst(0xC0);;
  1576  00F69A  0EC0               	movlw	192
  1577  00F69C  EC81  F078         	call	_lcdInst
  1578  00F6A0                     
  1579                           ;main.c: 202: while(PORTBbits.RB1 == 0){ continue; }
  1580  00F6A0  A281               	btfss	3969,1,c	;volatile
  1581  00F6A2  D7FE               	goto	l105
  1582                           
  1583                           ;main.c: 205: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1584  00F6A4  3881               	swapf	3969,w,c	;volatile
  1585  00F6A6  0B0F               	andlw	15
  1586  00F6A8  0B0F               	andlw	15
  1587  00F6AA  6E10               	movwf	main@keypress_179,c
  1588  00F6AC  B281               	btfsc	3969,1,c	;volatile
  1589  00F6AE  D7FE               	goto	l110
  1590                           
  1591                           ;main.c: 210: if(keypress == 14){
  1592  00F6B0  0E0E               	movlw	14
  1593  00F6B2  1810               	xorwf	main@keypress_179,w,c
  1594  00F6B4  B4D8               	btfsc	status,2,c
  1595  00F6B6  D00D               	goto	l113
  1596                           
  1597                           ;main.c: 213: else{
  1598                           ;main.c: 214: putch(input[keypress]);
  1599                           
  1600                           ;main.c: 212: }
  1601                           
  1602                           ;main.c: 211: break;
  1603  00F6B8  5010               	movf	main@keypress_179,w,c
  1604  00F6BA  0D01               	mullw	1
  1605  00F6BC  0E3B               	movlw	low _input
  1606  00F6BE  24F3               	addwf	prodl,w,c
  1607  00F6C0  6EF6               	movwf	tblptrl,c
  1608  00F6C2  0EFB               	movlw	high _input
  1609  00F6C4  20F4               	addwfc	prodh,w,c
  1610  00F6C6  6EF7               	movwf	tblptrh,c
  1611  00F6C8                     	if	0	;There are less than 3 active tblptr bytes
  1612  00F6C8                     	endif
  1613  00F6C8  0008               	tblrd		*
  1614  00F6CA  50F5               	movf	tablat,w,c
  1615  00F6CC  EC8B  F078         	call	_putch
  1616  00F6D0  D7E7               	goto	l105
  1617  00F6D2                     l113:
  1618                           
  1619                           ;main.c: 215: }
  1620                           ;main.c: 216: }
  1621                           ;main.c: 220: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1622  00F6D2  0E01               	movlw	1
  1623  00F6D4  EC81  F078         	call	_lcdInst
  1624  00F6D8  0EC3               	movlw	195
  1625  00F6DA  6E09               	movwf	??_main& (0+255),c
  1626  00F6DC  0ECD               	movlw	205
  1627  00F6DE                     u1407:
  1628  00F6DE  2EE8               	decfsz	wreg,f,c
  1629  00F6E0  D7FE               	bra	u1407
  1630  00F6E2  2E09               	decfsz	??_main& (0+255),f,c
  1631  00F6E4  D7FC               	bra	u1407
  1632  00F6E6  F000               	nop	
  1633                           
  1634                           ;main.c: 221: printf("Drawer 5:");
  1635  00F6E8  0EBD               	movlw	low STR_26
  1636  00F6EA  6E04               	movwf	printf@f,c
  1637  00F6EC  0EFC               	movlw	high STR_26
  1638  00F6EE  6E05               	movwf	printf@f+1,c
  1639  00F6F0  EC95  F078         	call	_printf	;wreg free
  1640                           
  1641                           ;main.c: 222: lcdInst(0xC0);;
  1642  00F6F4  0EC0               	movlw	192
  1643  00F6F6  EC81  F078         	call	_lcdInst
  1644  00F6FA                     
  1645                           ;main.c: 225: while(PORTBbits.RB1 == 0){ continue; }
  1646  00F6FA  A281               	btfss	3969,1,c	;volatile
  1647  00F6FC  D7FE               	goto	l116
  1648                           
  1649                           ;main.c: 228: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1650  00F6FE  3881               	swapf	3969,w,c	;volatile
  1651  00F700  0B0F               	andlw	15
  1652  00F702  0B0F               	andlw	15
  1653  00F704  6E11               	movwf	main@keypress_181,c
  1654  00F706  B281               	btfsc	3969,1,c	;volatile
  1655  00F708  D7FE               	goto	l121
  1656                           
  1657                           ;main.c: 233: if(keypress == 14){
  1658  00F70A  0E0E               	movlw	14
  1659  00F70C  1811               	xorwf	main@keypress_181,w,c
  1660  00F70E  B4D8               	btfsc	status,2,c
  1661  00F710  D00D               	goto	l124
  1662                           
  1663                           ;main.c: 236: else{
  1664                           ;main.c: 237: putch(input[keypress]);
  1665                           
  1666                           ;main.c: 235: }
  1667                           
  1668                           ;main.c: 234: break;
  1669  00F712  5011               	movf	main@keypress_181,w,c
  1670  00F714  0D01               	mullw	1
  1671  00F716  0E3B               	movlw	low _input
  1672  00F718  24F3               	addwf	prodl,w,c
  1673  00F71A  6EF6               	movwf	tblptrl,c
  1674  00F71C  0EFB               	movlw	high _input
  1675  00F71E  20F4               	addwfc	prodh,w,c
  1676  00F720  6EF7               	movwf	tblptrh,c
  1677  00F722                     	if	0	;There are less than 3 active tblptr bytes
  1678  00F722                     	endif
  1679  00F722  0008               	tblrd		*
  1680  00F724  50F5               	movf	tablat,w,c
  1681  00F726  EC8B  F078         	call	_putch
  1682  00F72A  D7E7               	goto	l116
  1683  00F72C                     l124:
  1684                           
  1685                           ;main.c: 238: }
  1686                           ;main.c: 239: }
  1687                           ;main.c: 243: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1688  00F72C  0E01               	movlw	1
  1689  00F72E  EC81  F078         	call	_lcdInst
  1690  00F732  0EC3               	movlw	195
  1691  00F734  6E09               	movwf	??_main& (0+255),c
  1692  00F736  0ECD               	movlw	205
  1693  00F738                     u1417:
  1694  00F738  2EE8               	decfsz	wreg,f,c
  1695  00F73A  D7FE               	bra	u1417
  1696  00F73C  2E09               	decfsz	??_main& (0+255),f,c
  1697  00F73E  D7FC               	bra	u1417
  1698  00F740  F000               	nop	
  1699                           
  1700                           ;main.c: 244: printf("Drawer 6:");
  1701  00F742  0EC7               	movlw	low STR_27
  1702  00F744  6E04               	movwf	printf@f,c
  1703  00F746  0EFC               	movlw	high STR_27
  1704  00F748  6E05               	movwf	printf@f+1,c
  1705  00F74A  EC95  F078         	call	_printf	;wreg free
  1706                           
  1707                           ;main.c: 245: lcdInst(0xC0);;
  1708  00F74E  0EC0               	movlw	192
  1709  00F750  EC81  F078         	call	_lcdInst
  1710  00F754                     
  1711                           ;main.c: 248: while(PORTBbits.RB1 == 0){ continue; }
  1712  00F754  A281               	btfss	3969,1,c	;volatile
  1713  00F756  D7FE               	goto	l127
  1714                           
  1715                           ;main.c: 251: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1716  00F758  3881               	swapf	3969,w,c	;volatile
  1717  00F75A  0B0F               	andlw	15
  1718  00F75C  0B0F               	andlw	15
  1719  00F75E  6E12               	movwf	main@keypress_183,c
  1720  00F760  B281               	btfsc	3969,1,c	;volatile
  1721  00F762  D7FE               	goto	l132
  1722                           
  1723                           ;main.c: 256: if(keypress == 14){
  1724  00F764  0E0E               	movlw	14
  1725  00F766  1812               	xorwf	main@keypress_183,w,c
  1726  00F768  B4D8               	btfsc	status,2,c
  1727  00F76A  D00D               	goto	l135
  1728                           
  1729                           ;main.c: 259: else{
  1730                           ;main.c: 260: putch(input[keypress]);
  1731                           
  1732                           ;main.c: 258: }
  1733                           
  1734                           ;main.c: 257: break;
  1735  00F76C  5012               	movf	main@keypress_183,w,c
  1736  00F76E  0D01               	mullw	1
  1737  00F770  0E3B               	movlw	low _input
  1738  00F772  24F3               	addwf	prodl,w,c
  1739  00F774  6EF6               	movwf	tblptrl,c
  1740  00F776  0EFB               	movlw	high _input
  1741  00F778  20F4               	addwfc	prodh,w,c
  1742  00F77A  6EF7               	movwf	tblptrh,c
  1743  00F77C                     	if	0	;There are less than 3 active tblptr bytes
  1744  00F77C                     	endif
  1745  00F77C  0008               	tblrd		*
  1746  00F77E  50F5               	movf	tablat,w,c
  1747  00F780  EC8B  F078         	call	_putch
  1748  00F784  D7E7               	goto	l127
  1749  00F786                     l135:
  1750                           
  1751                           ;main.c: 261: }
  1752                           ;main.c: 262: }
  1753                           ;main.c: 266: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1754  00F786  0E01               	movlw	1
  1755  00F788  EC81  F078         	call	_lcdInst
  1756  00F78C  0EC3               	movlw	195
  1757  00F78E  6E09               	movwf	??_main& (0+255),c
  1758  00F790  0ECD               	movlw	205
  1759  00F792                     u1427:
  1760  00F792  2EE8               	decfsz	wreg,f,c
  1761  00F794  D7FE               	bra	u1427
  1762  00F796  2E09               	decfsz	??_main& (0+255),f,c
  1763  00F798  D7FC               	bra	u1427
  1764  00F79A  F000               	nop	
  1765                           
  1766                           ;main.c: 267: printf("Drawer 7:");
  1767  00F79C  0ED1               	movlw	low STR_28
  1768  00F79E  6E04               	movwf	printf@f,c
  1769  00F7A0  0EFC               	movlw	high STR_28
  1770  00F7A2  6E05               	movwf	printf@f+1,c
  1771  00F7A4  EC95  F078         	call	_printf	;wreg free
  1772                           
  1773                           ;main.c: 268: lcdInst(0xC0);;
  1774  00F7A8  0EC0               	movlw	192
  1775  00F7AA  EC81  F078         	call	_lcdInst
  1776  00F7AE                     
  1777                           ;main.c: 271: while(PORTBbits.RB1 == 0){ continue; }
  1778  00F7AE  A281               	btfss	3969,1,c	;volatile
  1779  00F7B0  D7FE               	goto	l138
  1780                           
  1781                           ;main.c: 274: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1782  00F7B2  3881               	swapf	3969,w,c	;volatile
  1783  00F7B4  0B0F               	andlw	15
  1784  00F7B6  0B0F               	andlw	15
  1785  00F7B8  6E13               	movwf	main@keypress_185,c
  1786  00F7BA  B281               	btfsc	3969,1,c	;volatile
  1787  00F7BC  D7FE               	goto	l143
  1788                           
  1789                           ;main.c: 279: if(keypress == 14){
  1790  00F7BE  0E0E               	movlw	14
  1791  00F7C0  1813               	xorwf	main@keypress_185,w,c
  1792  00F7C2  B4D8               	btfsc	status,2,c
  1793  00F7C4  D00D               	goto	l146
  1794                           
  1795                           ;main.c: 282: else{
  1796                           ;main.c: 283: putch(input[keypress]);
  1797                           
  1798                           ;main.c: 281: }
  1799                           
  1800                           ;main.c: 280: break;
  1801  00F7C6  5013               	movf	main@keypress_185,w,c
  1802  00F7C8  0D01               	mullw	1
  1803  00F7CA  0E3B               	movlw	low _input
  1804  00F7CC  24F3               	addwf	prodl,w,c
  1805  00F7CE  6EF6               	movwf	tblptrl,c
  1806  00F7D0  0EFB               	movlw	high _input
  1807  00F7D2  20F4               	addwfc	prodh,w,c
  1808  00F7D4  6EF7               	movwf	tblptrh,c
  1809  00F7D6                     	if	0	;There are less than 3 active tblptr bytes
  1810  00F7D6                     	endif
  1811  00F7D6  0008               	tblrd		*
  1812  00F7D8  50F5               	movf	tablat,w,c
  1813  00F7DA  EC8B  F078         	call	_putch
  1814  00F7DE  D7E7               	goto	l138
  1815  00F7E0                     l146:
  1816                           
  1817                           ;main.c: 284: }
  1818                           ;main.c: 285: }
  1819                           ;main.c: 289: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1820  00F7E0  0E01               	movlw	1
  1821  00F7E2  EC81  F078         	call	_lcdInst
  1822  00F7E6  0EC3               	movlw	195
  1823  00F7E8  6E09               	movwf	??_main& (0+255),c
  1824  00F7EA  0ECD               	movlw	205
  1825  00F7EC                     u1437:
  1826  00F7EC  2EE8               	decfsz	wreg,f,c
  1827  00F7EE  D7FE               	bra	u1437
  1828  00F7F0  2E09               	decfsz	??_main& (0+255),f,c
  1829  00F7F2  D7FC               	bra	u1437
  1830  00F7F4  F000               	nop	
  1831                           
  1832                           ;main.c: 290: printf("Drawer 8:");
  1833  00F7F6  0EDB               	movlw	low STR_29
  1834  00F7F8  6E04               	movwf	printf@f,c
  1835  00F7FA  0EFC               	movlw	high STR_29
  1836  00F7FC  6E05               	movwf	printf@f+1,c
  1837  00F7FE  EC95  F078         	call	_printf	;wreg free
  1838                           
  1839                           ;main.c: 291: lcdInst(0xC0);;
  1840  00F802  0EC0               	movlw	192
  1841  00F804  EC81  F078         	call	_lcdInst
  1842  00F808                     
  1843                           ;main.c: 294: while(PORTBbits.RB1 == 0){ continue; }
  1844  00F808  A281               	btfss	3969,1,c	;volatile
  1845  00F80A  D7FE               	goto	l149
  1846                           
  1847                           ;main.c: 297: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1848  00F80C  3881               	swapf	3969,w,c	;volatile
  1849  00F80E  0B0F               	andlw	15
  1850  00F810  0B0F               	andlw	15
  1851  00F812  6E14               	movwf	main@keypress_187,c
  1852  00F814  B281               	btfsc	3969,1,c	;volatile
  1853  00F816  D7FE               	goto	l154
  1854                           
  1855                           ;main.c: 302: if(keypress == 14){
  1856  00F818  0E0E               	movlw	14
  1857  00F81A  1814               	xorwf	main@keypress_187,w,c
  1858  00F81C  B4D8               	btfsc	status,2,c
  1859  00F81E  D00D               	goto	l157
  1860                           
  1861                           ;main.c: 305: else{
  1862                           ;main.c: 306: putch(input[keypress]);
  1863                           
  1864                           ;main.c: 304: }
  1865                           
  1866                           ;main.c: 303: break;
  1867  00F820  5014               	movf	main@keypress_187,w,c
  1868  00F822  0D01               	mullw	1
  1869  00F824  0E3B               	movlw	low _input
  1870  00F826  24F3               	addwf	prodl,w,c
  1871  00F828  6EF6               	movwf	tblptrl,c
  1872  00F82A  0EFB               	movlw	high _input
  1873  00F82C  20F4               	addwfc	prodh,w,c
  1874  00F82E  6EF7               	movwf	tblptrh,c
  1875  00F830                     	if	0	;There are less than 3 active tblptr bytes
  1876  00F830                     	endif
  1877  00F830  0008               	tblrd		*
  1878  00F832  50F5               	movf	tablat,w,c
  1879  00F834  EC8B  F078         	call	_putch
  1880  00F838  D7E7               	goto	l149
  1881  00F83A                     l157:
  1882                           
  1883                           ;main.c: 307: }
  1884                           ;main.c: 308: }
  1885                           ;main.c: 312: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1886  00F83A  0E01               	movlw	1
  1887  00F83C  EC81  F078         	call	_lcdInst
  1888  00F840  0EC3               	movlw	195
  1889  00F842  6E09               	movwf	??_main& (0+255),c
  1890  00F844  0ECD               	movlw	205
  1891  00F846                     u1447:
  1892  00F846  2EE8               	decfsz	wreg,f,c
  1893  00F848  D7FE               	bra	u1447
  1894  00F84A  2E09               	decfsz	??_main& (0+255),f,c
  1895  00F84C  D7FC               	bra	u1447
  1896  00F84E  F000               	nop	
  1897                           
  1898                           ;main.c: 313: printf("Drawer 9:");
  1899  00F850  0EE5               	movlw	low STR_30
  1900  00F852  6E04               	movwf	printf@f,c
  1901  00F854  0EFC               	movlw	high STR_30
  1902  00F856  6E05               	movwf	printf@f+1,c
  1903  00F858  EC95  F078         	call	_printf	;wreg free
  1904                           
  1905                           ;main.c: 314: lcdInst(0xC0);;
  1906  00F85C  0EC0               	movlw	192
  1907  00F85E  EC81  F078         	call	_lcdInst
  1908  00F862                     
  1909                           ;main.c: 317: while(PORTBbits.RB1 == 0){ continue; }
  1910  00F862  A281               	btfss	3969,1,c	;volatile
  1911  00F864  D7FE               	goto	l160
  1912                           
  1913                           ;main.c: 320: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1914  00F866  3881               	swapf	3969,w,c	;volatile
  1915  00F868  0B0F               	andlw	15
  1916  00F86A  0B0F               	andlw	15
  1917  00F86C  6E15               	movwf	main@keypress_189,c
  1918  00F86E  B281               	btfsc	3969,1,c	;volatile
  1919  00F870  D7FE               	goto	l165
  1920                           
  1921                           ;main.c: 325: if(keypress == 14){
  1922  00F872  0E0E               	movlw	14
  1923  00F874  1815               	xorwf	main@keypress_189,w,c
  1924  00F876  B4D8               	btfsc	status,2,c
  1925  00F878  D00D               	goto	l168
  1926                           
  1927                           ;main.c: 328: else{
  1928                           ;main.c: 329: putch(input[keypress]);
  1929                           
  1930                           ;main.c: 327: }
  1931                           
  1932                           ;main.c: 326: break;
  1933  00F87A  5015               	movf	main@keypress_189,w,c
  1934  00F87C  0D01               	mullw	1
  1935  00F87E  0E3B               	movlw	low _input
  1936  00F880  24F3               	addwf	prodl,w,c
  1937  00F882  6EF6               	movwf	tblptrl,c
  1938  00F884  0EFB               	movlw	high _input
  1939  00F886  20F4               	addwfc	prodh,w,c
  1940  00F888  6EF7               	movwf	tblptrh,c
  1941  00F88A                     	if	0	;There are less than 3 active tblptr bytes
  1942  00F88A                     	endif
  1943  00F88A  0008               	tblrd		*
  1944  00F88C  50F5               	movf	tablat,w,c
  1945  00F88E  EC8B  F078         	call	_putch
  1946  00F892  D7E7               	goto	l160
  1947  00F894                     l168:
  1948                           
  1949                           ;main.c: 330: }
  1950                           ;main.c: 331: }
  1951                           ;main.c: 335: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1952  00F894  0E01               	movlw	1
  1953  00F896  EC81  F078         	call	_lcdInst
  1954  00F89A  0EC3               	movlw	195
  1955  00F89C  6E09               	movwf	??_main& (0+255),c
  1956  00F89E  0ECD               	movlw	205
  1957  00F8A0                     u1457:
  1958  00F8A0  2EE8               	decfsz	wreg,f,c
  1959  00F8A2  D7FE               	bra	u1457
  1960  00F8A4  2E09               	decfsz	??_main& (0+255),f,c
  1961  00F8A6  D7FC               	bra	u1457
  1962  00F8A8  F000               	nop	
  1963                           
  1964                           ;main.c: 336: printf("Drawer 10:");
  1965  00F8AA  0E48               	movlw	low STR_31
  1966  00F8AC  6E04               	movwf	printf@f,c
  1967  00F8AE  0EFC               	movlw	high STR_31
  1968  00F8B0  6E05               	movwf	printf@f+1,c
  1969  00F8B2  EC95  F078         	call	_printf	;wreg free
  1970                           
  1971                           ;main.c: 337: lcdInst(0xC0);;
  1972  00F8B6  0EC0               	movlw	192
  1973  00F8B8  EC81  F078         	call	_lcdInst
  1974  00F8BC                     
  1975                           ;main.c: 340: while(PORTBbits.RB1 == 0){ continue; }
  1976  00F8BC  A281               	btfss	3969,1,c	;volatile
  1977  00F8BE  D7FE               	goto	l171
  1978                           
  1979                           ;main.c: 343: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1980  00F8C0  3881               	swapf	3969,w,c	;volatile
  1981  00F8C2  0B0F               	andlw	15
  1982  00F8C4  0B0F               	andlw	15
  1983  00F8C6  6E16               	movwf	main@keypress_191,c
  1984  00F8C8  B281               	btfsc	3969,1,c	;volatile
  1985  00F8CA  D7FE               	goto	l176
  1986                           
  1987                           ;main.c: 348: if(keypress == 14){
  1988  00F8CC  0E0E               	movlw	14
  1989  00F8CE  1816               	xorwf	main@keypress_191,w,c
  1990  00F8D0  B4D8               	btfsc	status,2,c
  1991  00F8D2  D00D               	goto	l179
  1992                           
  1993                           ;main.c: 351: else{
  1994                           ;main.c: 352: putch(input[keypress]);
  1995                           
  1996                           ;main.c: 350: }
  1997                           
  1998                           ;main.c: 349: break;
  1999  00F8D4  5016               	movf	main@keypress_191,w,c
  2000  00F8D6  0D01               	mullw	1
  2001  00F8D8  0E3B               	movlw	low _input
  2002  00F8DA  24F3               	addwf	prodl,w,c
  2003  00F8DC  6EF6               	movwf	tblptrl,c
  2004  00F8DE  0EFB               	movlw	high _input
  2005  00F8E0  20F4               	addwfc	prodh,w,c
  2006  00F8E2  6EF7               	movwf	tblptrh,c
  2007  00F8E4                     	if	0	;There are less than 3 active tblptr bytes
  2008  00F8E4                     	endif
  2009  00F8E4  0008               	tblrd		*
  2010  00F8E6  50F5               	movf	tablat,w,c
  2011  00F8E8  EC8B  F078         	call	_putch
  2012  00F8EC  D7E7               	goto	l171
  2013  00F8EE                     l179:
  2014                           
  2015                           ;main.c: 353: }
  2016                           ;main.c: 354: }
  2017                           ;main.c: 358: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2018  00F8EE  0E01               	movlw	1
  2019  00F8F0  EC81  F078         	call	_lcdInst
  2020  00F8F4  0EC3               	movlw	195
  2021  00F8F6  6E09               	movwf	??_main& (0+255),c
  2022  00F8F8  0ECD               	movlw	205
  2023  00F8FA                     u1467:
  2024  00F8FA  2EE8               	decfsz	wreg,f,c
  2025  00F8FC  D7FE               	bra	u1467
  2026  00F8FE  2E09               	decfsz	??_main& (0+255),f,c
  2027  00F900  D7FC               	bra	u1467
  2028  00F902  F000               	nop	
  2029                           
  2030                           ;main.c: 359: printf("Drawer 11:");
  2031  00F904  0E53               	movlw	low STR_32
  2032  00F906  6E04               	movwf	printf@f,c
  2033  00F908  0EFC               	movlw	high STR_32
  2034  00F90A  6E05               	movwf	printf@f+1,c
  2035  00F90C  EC95  F078         	call	_printf	;wreg free
  2036                           
  2037                           ;main.c: 360: lcdInst(0xC0);;
  2038  00F910  0EC0               	movlw	192
  2039  00F912  EC81  F078         	call	_lcdInst
  2040  00F916                     
  2041                           ;main.c: 363: while(PORTBbits.RB1 == 0){ continue; }
  2042  00F916  A281               	btfss	3969,1,c	;volatile
  2043  00F918  D7FE               	goto	l182
  2044                           
  2045                           ;main.c: 366: unsigned char keypress = (PORTB & 0xF0) >> 4;
  2046  00F91A  3881               	swapf	3969,w,c	;volatile
  2047  00F91C  0B0F               	andlw	15
  2048  00F91E  0B0F               	andlw	15
  2049  00F920  6E17               	movwf	main@keypress_193,c
  2050  00F922  B281               	btfsc	3969,1,c	;volatile
  2051  00F924  D7FE               	goto	l187
  2052                           
  2053                           ;main.c: 371: if(keypress == 14){
  2054  00F926  0E0E               	movlw	14
  2055  00F928  1817               	xorwf	main@keypress_193,w,c
  2056  00F92A  B4D8               	btfsc	status,2,c
  2057  00F92C  D00D               	goto	l190
  2058                           
  2059                           ;main.c: 374: else{
  2060                           ;main.c: 375: putch(input[keypress]);
  2061                           
  2062                           ;main.c: 373: }
  2063                           
  2064                           ;main.c: 372: break;
  2065  00F92E  5017               	movf	main@keypress_193,w,c
  2066  00F930  0D01               	mullw	1
  2067  00F932  0E3B               	movlw	low _input
  2068  00F934  24F3               	addwf	prodl,w,c
  2069  00F936  6EF6               	movwf	tblptrl,c
  2070  00F938  0EFB               	movlw	high _input
  2071  00F93A  20F4               	addwfc	prodh,w,c
  2072  00F93C  6EF7               	movwf	tblptrh,c
  2073  00F93E                     	if	0	;There are less than 3 active tblptr bytes
  2074  00F93E                     	endif
  2075  00F93E  0008               	tblrd		*
  2076  00F940  50F5               	movf	tablat,w,c
  2077  00F942  EC8B  F078         	call	_putch
  2078  00F946  D7E7               	goto	l182
  2079  00F948                     l190:
  2080                           
  2081                           ;main.c: 376: }
  2082                           ;main.c: 377: }
  2083                           ;main.c: 381: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2084  00F948  0E01               	movlw	1
  2085  00F94A  EC81  F078         	call	_lcdInst
  2086  00F94E  0EC3               	movlw	195
  2087  00F950  6E09               	movwf	??_main& (0+255),c
  2088  00F952  0ECD               	movlw	205
  2089  00F954                     u1477:
  2090  00F954  2EE8               	decfsz	wreg,f,c
  2091  00F956  D7FE               	bra	u1477
  2092  00F958  2E09               	decfsz	??_main& (0+255),f,c
  2093  00F95A  D7FC               	bra	u1477
  2094  00F95C  F000               	nop	
  2095                           
  2096                           ;main.c: 382: printf("Drawer 12:");
  2097  00F95E  0E5E               	movlw	low STR_33
  2098  00F960  6E04               	movwf	printf@f,c
  2099  00F962  0EFC               	movlw	high STR_33
  2100  00F964  6E05               	movwf	printf@f+1,c
  2101  00F966  EC95  F078         	call	_printf	;wreg free
  2102                           
  2103                           ;main.c: 383: lcdInst(0xC0);;
  2104  00F96A  0EC0               	movlw	192
  2105  00F96C  EC81  F078         	call	_lcdInst
  2106  00F970                     
  2107                           ;main.c: 386: while(PORTBbits.RB1 == 0){ continue; }
  2108  00F970  A281               	btfss	3969,1,c	;volatile
  2109  00F972  D7FE               	goto	l193
  2110                           
  2111                           ;main.c: 389: unsigned char keypress = (PORTB & 0xF0) >> 4;
  2112  00F974  3881               	swapf	3969,w,c	;volatile
  2113  00F976  0B0F               	andlw	15
  2114  00F978  0B0F               	andlw	15
  2115  00F97A  6E18               	movwf	main@keypress_195,c
  2116  00F97C  B281               	btfsc	3969,1,c	;volatile
  2117  00F97E  D7FE               	goto	l198
  2118                           
  2119                           ;main.c: 394: if(keypress == 14){
  2120  00F980  0E0E               	movlw	14
  2121  00F982  1818               	xorwf	main@keypress_195,w,c
  2122  00F984  B4D8               	btfsc	status,2,c
  2123  00F986  D00D               	goto	l201
  2124                           
  2125                           ;main.c: 397: else{
  2126                           ;main.c: 398: putch(input[keypress]);
  2127                           
  2128                           ;main.c: 396: }
  2129                           
  2130                           ;main.c: 395: break;
  2131  00F988  5018               	movf	main@keypress_195,w,c
  2132  00F98A  0D01               	mullw	1
  2133  00F98C  0E3B               	movlw	low _input
  2134  00F98E  24F3               	addwf	prodl,w,c
  2135  00F990  6EF6               	movwf	tblptrl,c
  2136  00F992  0EFB               	movlw	high _input
  2137  00F994  20F4               	addwfc	prodh,w,c
  2138  00F996  6EF7               	movwf	tblptrh,c
  2139  00F998                     	if	0	;There are less than 3 active tblptr bytes
  2140  00F998                     	endif
  2141  00F998  0008               	tblrd		*
  2142  00F99A  50F5               	movf	tablat,w,c
  2143  00F99C  EC8B  F078         	call	_putch
  2144  00F9A0  D7E7               	goto	l193
  2145  00F9A2                     l201:
  2146                           
  2147                           ;main.c: 399: }
  2148                           ;main.c: 400: }
  2149                           ;main.c: 404: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2150  00F9A2  0E01               	movlw	1
  2151  00F9A4  EC81  F078         	call	_lcdInst
  2152  00F9A8  0EC3               	movlw	195
  2153  00F9AA  6E09               	movwf	??_main& (0+255),c
  2154  00F9AC  0ECD               	movlw	205
  2155  00F9AE                     u1487:
  2156  00F9AE  2EE8               	decfsz	wreg,f,c
  2157  00F9B0  D7FE               	bra	u1487
  2158  00F9B2  2E09               	decfsz	??_main& (0+255),f,c
  2159  00F9B4  D7FC               	bra	u1487
  2160  00F9B6  F000               	nop	
  2161                           
  2162                           ;main.c: 405: printf("Drawer 13:");
  2163  00F9B8  0E69               	movlw	low STR_34
  2164  00F9BA  6E04               	movwf	printf@f,c
  2165  00F9BC  0EFC               	movlw	high STR_34
  2166  00F9BE  6E05               	movwf	printf@f+1,c
  2167  00F9C0  EC95  F078         	call	_printf	;wreg free
  2168                           
  2169                           ;main.c: 406: lcdInst(0xC0);;
  2170  00F9C4  0EC0               	movlw	192
  2171  00F9C6  EC81  F078         	call	_lcdInst
  2172  00F9CA                     
  2173                           ;main.c: 409: while(PORTBbits.RB1 == 0){ continue; }
  2174  00F9CA  A281               	btfss	3969,1,c	;volatile
  2175  00F9CC  D7FE               	goto	l204
  2176                           
  2177                           ;main.c: 412: unsigned char keypress = (PORTB & 0xF0) >> 4;
  2178  00F9CE  3881               	swapf	3969,w,c	;volatile
  2179  00F9D0  0B0F               	andlw	15
  2180  00F9D2  0B0F               	andlw	15
  2181  00F9D4  6E19               	movwf	main@keypress_197,c
  2182  00F9D6  B281               	btfsc	3969,1,c	;volatile
  2183  00F9D8  D7FE               	goto	l209
  2184                           
  2185                           ;main.c: 417: if(keypress == 14){
  2186  00F9DA  0E0E               	movlw	14
  2187  00F9DC  1819               	xorwf	main@keypress_197,w,c
  2188  00F9DE  B4D8               	btfsc	status,2,c
  2189  00F9E0  D00D               	goto	l212
  2190                           
  2191                           ;main.c: 420: else{
  2192                           ;main.c: 421: putch(input[keypress]);
  2193                           
  2194                           ;main.c: 419: }
  2195                           
  2196                           ;main.c: 418: break;
  2197  00F9E2  5019               	movf	main@keypress_197,w,c
  2198  00F9E4  0D01               	mullw	1
  2199  00F9E6  0E3B               	movlw	low _input
  2200  00F9E8  24F3               	addwf	prodl,w,c
  2201  00F9EA  6EF6               	movwf	tblptrl,c
  2202  00F9EC  0EFB               	movlw	high _input
  2203  00F9EE  20F4               	addwfc	prodh,w,c
  2204  00F9F0  6EF7               	movwf	tblptrh,c
  2205  00F9F2                     	if	0	;There are less than 3 active tblptr bytes
  2206  00F9F2                     	endif
  2207  00F9F2  0008               	tblrd		*
  2208  00F9F4  50F5               	movf	tablat,w,c
  2209  00F9F6  EC8B  F078         	call	_putch
  2210  00F9FA  D7E7               	goto	l204
  2211  00F9FC                     l212:
  2212                           
  2213                           ;main.c: 422: }
  2214                           ;main.c: 423: }
  2215                           ;main.c: 427: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2216  00F9FC  0E01               	movlw	1
  2217  00F9FE  EC81  F078         	call	_lcdInst
  2218  00FA02  0EC3               	movlw	195
  2219  00FA04  6E09               	movwf	??_main& (0+255),c
  2220  00FA06  0ECD               	movlw	205
  2221  00FA08                     u1497:
  2222  00FA08  2EE8               	decfsz	wreg,f,c
  2223  00FA0A  D7FE               	bra	u1497
  2224  00FA0C  2E09               	decfsz	??_main& (0+255),f,c
  2225  00FA0E  D7FC               	bra	u1497
  2226  00FA10  F000               	nop	
  2227                           
  2228                           ;main.c: 428: printf("Drawer 14:");
  2229  00FA12  0E74               	movlw	low STR_35
  2230  00FA14  6E04               	movwf	printf@f,c
  2231  00FA16  0EFC               	movlw	high STR_35
  2232  00FA18  6E05               	movwf	printf@f+1,c
  2233  00FA1A  EC95  F078         	call	_printf	;wreg free
  2234                           
  2235                           ;main.c: 429: lcdInst(0xC0);;
  2236  00FA1E  0EC0               	movlw	192
  2237  00FA20  EC81  F078         	call	_lcdInst
  2238  00FA24                     
  2239                           ;main.c: 432: while(PORTBbits.RB1 == 0){ continue; }
  2240  00FA24  A281               	btfss	3969,1,c	;volatile
  2241  00FA26  D7FE               	goto	l215
  2242                           
  2243                           ;main.c: 435: unsigned char keypress = (PORTB & 0xF0) >> 4;
  2244  00FA28  3881               	swapf	3969,w,c	;volatile
  2245  00FA2A  0B0F               	andlw	15
  2246  00FA2C  0B0F               	andlw	15
  2247  00FA2E  6E1A               	movwf	main@keypress_199,c
  2248  00FA30  B281               	btfsc	3969,1,c	;volatile
  2249  00FA32  D7FE               	goto	l220
  2250                           
  2251                           ;main.c: 440: if(keypress == 14){
  2252  00FA34  0E0E               	movlw	14
  2253  00FA36  181A               	xorwf	main@keypress_199,w,c
  2254  00FA38  B4D8               	btfsc	status,2,c
  2255  00FA3A  D00D               	goto	l223
  2256                           
  2257                           ;main.c: 443: else{
  2258                           ;main.c: 444: putch(input[keypress]);
  2259                           
  2260                           ;main.c: 442: }
  2261                           
  2262                           ;main.c: 441: break;
  2263  00FA3C  501A               	movf	main@keypress_199,w,c
  2264  00FA3E  0D01               	mullw	1
  2265  00FA40  0E3B               	movlw	low _input
  2266  00FA42  24F3               	addwf	prodl,w,c
  2267  00FA44  6EF6               	movwf	tblptrl,c
  2268  00FA46  0EFB               	movlw	high _input
  2269  00FA48  20F4               	addwfc	prodh,w,c
  2270  00FA4A  6EF7               	movwf	tblptrh,c
  2271  00FA4C                     	if	0	;There are less than 3 active tblptr bytes
  2272  00FA4C                     	endif
  2273  00FA4C  0008               	tblrd		*
  2274  00FA4E  50F5               	movf	tablat,w,c
  2275  00FA50  EC8B  F078         	call	_putch
  2276  00FA54  D7E7               	goto	l215
  2277  00FA56                     l223:
  2278                           
  2279                           ;main.c: 445: }
  2280                           ;main.c: 446: }
  2281                           ;main.c: 450: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2282  00FA56  0E01               	movlw	1
  2283  00FA58  EC81  F078         	call	_lcdInst
  2284  00FA5C  0EC3               	movlw	195
  2285  00FA5E  6E09               	movwf	??_main& (0+255),c
  2286  00FA60  0ECD               	movlw	205
  2287  00FA62                     u1507:
  2288  00FA62  2EE8               	decfsz	wreg,f,c
  2289  00FA64  D7FE               	bra	u1507
  2290  00FA66  2E09               	decfsz	??_main& (0+255),f,c
  2291  00FA68  D7FC               	bra	u1507
  2292  00FA6A  F000               	nop	
  2293                           
  2294                           ;main.c: 451: printf("Drawer 15:");
  2295  00FA6C  0E7F               	movlw	low STR_36
  2296  00FA6E  6E04               	movwf	printf@f,c
  2297  00FA70  0EFC               	movlw	high STR_36
  2298  00FA72  6E05               	movwf	printf@f+1,c
  2299  00FA74  EC95  F078         	call	_printf	;wreg free
  2300                           
  2301                           ;main.c: 452: lcdInst(0xC0);;
  2302  00FA78  0EC0               	movlw	192
  2303  00FA7A  EC81  F078         	call	_lcdInst
  2304  00FA7E                     
  2305                           ;main.c: 455: while(PORTBbits.RB1 == 0){ continue; }
  2306  00FA7E  A281               	btfss	3969,1,c	;volatile
  2307  00FA80  D7FE               	goto	l226
  2308                           
  2309                           ;main.c: 458: unsigned char keypress = (PORTB & 0xF0) >> 4;
  2310  00FA82  3881               	swapf	3969,w,c	;volatile
  2311  00FA84  0B0F               	andlw	15
  2312  00FA86  0B0F               	andlw	15
  2313  00FA88  6E1B               	movwf	main@keypress_201,c
  2314  00FA8A  B281               	btfsc	3969,1,c	;volatile
  2315  00FA8C  D7FE               	goto	l231
  2316                           
  2317                           ;main.c: 463: if(keypress == 14){
  2318  00FA8E  0E0E               	movlw	14
  2319  00FA90  181B               	xorwf	main@keypress_201,w,c
  2320  00FA92  B4D8               	btfsc	status,2,c
  2321  00FA94  D00D               	goto	l234
  2322                           
  2323                           ;main.c: 466: else{
  2324                           ;main.c: 467: putch(input[keypress]);
  2325                           
  2326                           ;main.c: 465: }
  2327                           
  2328                           ;main.c: 464: break;
  2329  00FA96  501B               	movf	main@keypress_201,w,c
  2330  00FA98  0D01               	mullw	1
  2331  00FA9A  0E3B               	movlw	low _input
  2332  00FA9C  24F3               	addwf	prodl,w,c
  2333  00FA9E  6EF6               	movwf	tblptrl,c
  2334  00FAA0  0EFB               	movlw	high _input
  2335  00FAA2  20F4               	addwfc	prodh,w,c
  2336  00FAA4  6EF7               	movwf	tblptrh,c
  2337  00FAA6                     	if	0	;There are less than 3 active tblptr bytes
  2338  00FAA6                     	endif
  2339  00FAA6  0008               	tblrd		*
  2340  00FAA8  50F5               	movf	tablat,w,c
  2341  00FAAA  EC8B  F078         	call	_putch
  2342  00FAAE  D7E7               	goto	l226
  2343  00FAB0                     l234:
  2344                           
  2345                           ;main.c: 468: }
  2346                           ;main.c: 469: }
  2347                           ;main.c: 473: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2348  00FAB0  0E01               	movlw	1
  2349  00FAB2  EC81  F078         	call	_lcdInst
  2350  00FAB6  0EC3               	movlw	195
  2351  00FAB8  6E09               	movwf	??_main& (0+255),c
  2352  00FABA  0ECD               	movlw	205
  2353  00FABC                     u1517:
  2354  00FABC  2EE8               	decfsz	wreg,f,c
  2355  00FABE  D7FE               	bra	u1517
  2356  00FAC0  2E09               	decfsz	??_main& (0+255),f,c
  2357  00FAC2  D7FC               	bra	u1517
  2358  00FAC4  F000               	nop	
  2359                           
  2360                           ;main.c: 474: printf("Drawer 16:");
  2361  00FAC6  0E8A               	movlw	low STR_37
  2362  00FAC8  6E04               	movwf	printf@f,c
  2363  00FACA  0EFC               	movlw	high STR_37
  2364  00FACC  6E05               	movwf	printf@f+1,c
  2365  00FACE  EC95  F078         	call	_printf	;wreg free
  2366                           
  2367                           ;main.c: 475: lcdInst(0xC0);;
  2368  00FAD2  0EC0               	movlw	192
  2369  00FAD4  EC81  F078         	call	_lcdInst
  2370  00FAD8                     
  2371                           ;main.c: 478: while(PORTBbits.RB1 == 0){ continue; }
  2372  00FAD8  A281               	btfss	3969,1,c	;volatile
  2373  00FADA  D7FE               	goto	l237
  2374                           
  2375                           ;main.c: 481: unsigned char keypress = (PORTB & 0xF0) >> 4;
  2376  00FADC  3881               	swapf	3969,w,c	;volatile
  2377  00FADE  0B0F               	andlw	15
  2378  00FAE0  0B0F               	andlw	15
  2379  00FAE2  6E1C               	movwf	main@keypress_203,c
  2380  00FAE4  B281               	btfsc	3969,1,c	;volatile
  2381  00FAE6  D7FE               	goto	l242
  2382                           
  2383                           ;main.c: 486: if(keypress == 14){
  2384  00FAE8  0E0E               	movlw	14
  2385  00FAEA  181C               	xorwf	main@keypress_203,w,c
  2386  00FAEC  B4D8               	btfsc	status,2,c
  2387  00FAEE  D00D               	goto	l245
  2388                           
  2389                           ;main.c: 489: else{
  2390                           ;main.c: 490: putch(input[keypress]);
  2391                           
  2392                           ;main.c: 488: }
  2393                           
  2394                           ;main.c: 487: break;
  2395  00FAF0  501C               	movf	main@keypress_203,w,c
  2396  00FAF2  0D01               	mullw	1
  2397  00FAF4  0E3B               	movlw	low _input
  2398  00FAF6  24F3               	addwf	prodl,w,c
  2399  00FAF8  6EF6               	movwf	tblptrl,c
  2400  00FAFA  0EFB               	movlw	high _input
  2401  00FAFC  20F4               	addwfc	prodh,w,c
  2402  00FAFE  6EF7               	movwf	tblptrh,c
  2403  00FB00                     	if	0	;There are less than 3 active tblptr bytes
  2404  00FB00                     	endif
  2405  00FB00  0008               	tblrd		*
  2406  00FB02  50F5               	movf	tablat,w,c
  2407  00FB04  EC8B  F078         	call	_putch
  2408  00FB08  D7E7               	goto	l237
  2409  00FB0A                     l245:
  2410                           
  2411                           ;main.c: 497: while(PORTBbits.RB1 == 0){ continue; }
  2412                           
  2413                           ;main.c: 491: }
  2414                           ;main.c: 492: }
  2415                           ;main.c: 496: while(1){
  2416  00FB0A  A281               	btfss	3969,1,c	;volatile
  2417  00FB0C  D7FE               	goto	l245
  2418                           
  2419                           ;main.c: 500: unsigned char keypress = (PORTB & 0xF0) >> 4;
  2420  00FB0E  3881               	swapf	3969,w,c	;volatile
  2421  00FB10  0B0F               	andlw	15
  2422  00FB12  0B0F               	andlw	15
  2423  00FB14  6E0B               	movwf	main@keypress_204,c
  2424  00FB16  B281               	btfsc	3969,1,c	;volatile
  2425  00FB18  D7FE               	goto	l253
  2426                           
  2427                           ;main.c: 505: __nop();
  2428  00FB1A  F000               	nop	
  2429                           
  2430                           ;main.c: 507: unsigned char temp = input[keypress];
  2431  00FB1C  500B               	movf	main@keypress_204,w,c
  2432  00FB1E  0D01               	mullw	1
  2433  00FB20  0E3B               	movlw	low _input
  2434  00FB22  24F3               	addwf	prodl,w,c
  2435  00FB24  6EF6               	movwf	tblptrl,c
  2436  00FB26  0EFB               	movlw	high _input
  2437  00FB28  20F4               	addwfc	prodh,w,c
  2438  00FB2A  6EF7               	movwf	tblptrh,c
  2439  00FB2C                     	if	0	;There are less than 3 active tblptr bytes
  2440  00FB2C                     	endif
  2441  00FB2C  0008               	tblrd		*
  2442  00FB2E  CFF5 F00C          	movff	tablat,main@temp
  2443                           
  2444                           ;main.c: 508: putch(temp);
  2445  00FB32  500C               	movf	main@temp,w,c
  2446  00FB34  EC8B  F078         	call	_putch
  2447  00FB38  D7E8               	goto	l245
  2448  00FB3A                     __end_of_main:
  2449                           	opt stack 0
  2450                           tblptru	equ	0xFF8
  2451                           tblptrh	equ	0xFF7
  2452                           tblptrl	equ	0xFF6
  2453                           tablat	equ	0xFF5
  2454                           prodh	equ	0xFF4
  2455                           prodl	equ	0xFF3
  2456                           wreg	equ	0xFE8
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _printf *****************
  2460 ;; Defined at:
  2461 ;;		line 464 in file "/Applications/microchip/xc8/v1.45/sources/common/doprnt.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  f               2    3[COMRAM] PTR const unsigned char 
  2464 ;;		 -> STR_37(11), STR_36(11), STR_35(11), STR_34(11), 
  2465 ;;		 -> STR_33(11), STR_32(11), STR_31(11), STR_30(10), 
  2466 ;;		 -> STR_29(10), STR_28(10), STR_27(10), STR_26(10), 
  2467 ;;		 -> STR_25(10), STR_24(10), STR_23(10), STR_22(10), 
  2468 ;;		 -> STR_21(13), STR_20(14), STR_19(14), STR_18(12), 
  2469 ;;		 -> STR_17(13), STR_16(13), STR_15(11), STR_14(17), 
  2470 ;;		 -> STR_13(15), STR_12(14), STR_11(14), STR_10(7), 
  2471 ;;		 -> STR_9(17), STR_8(15), STR_7(13), STR_6(14), 
  2472 ;;		 -> STR_5(16), STR_4(16), STR_3(17), STR_2(17), 
  2473 ;;		 -> STR_1(8), 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  tmpval          4    0        struct .
  2476 ;;  cp              3    0        PTR const unsigned char 
  2477 ;;  ap              2    5[COMRAM] PTR void [1]
  2478 ;;		 -> ?_printf(2), 
  2479 ;;  len             2    0        unsigned int 
  2480 ;;  val             2    0        unsigned int 
  2481 ;;  c               1    7[COMRAM] char 
  2482 ;;  flag            1    0        unsigned char 
  2483 ;;  prec            1    0        char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2    3[COMRAM] int 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;Total ram usage:        5 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    2
  2500 ;; This function calls:
  2501 ;;		_putch
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text1
  2508  00F12A                     __ptext1:
  2509                           	opt stack 0
  2510  00F12A                     _printf:
  2511                           	opt stack 28
  2512                           
  2513                           ;doprnt.c: 466: va_list ap;
  2514                           ;doprnt.c: 499: signed char c;
  2515                           ;doprnt.c: 506: signed char prec;
  2516                           ;doprnt.c: 508: unsigned char flag;
  2517                           ;doprnt.c: 523: union {
  2518                           ;doprnt.c: 524: unsigned long vd;
  2519                           ;doprnt.c: 525: double integ;
  2520                           ;doprnt.c: 526: } tmpval;
  2521                           ;doprnt.c: 528: unsigned int val;
  2522                           ;doprnt.c: 529: unsigned len;
  2523                           ;doprnt.c: 530: const char * cp;
  2524                           ;doprnt.c: 533: *ap = __va_start();
  2525                           
  2526                           ;incstack = 0
  2527  00F12A  0E06               	movlw	low (?_printf+2)
  2528  00F12C  6E06               	movwf	printf@ap,c
  2529  00F12E  0E00               	movlw	high (?_printf+2)
  2530  00F130  6E07               	movwf	printf@ap+1,c
  2531                           
  2532                           ;doprnt.c: 536: while(c = *f++) {
  2533  00F132  D003               	goto	l318
  2534  00F134                     
  2535                           ;doprnt.c: 540: {
  2536                           ;doprnt.c: 541: (putch(c) );
  2537  00F134  5008               	movf	printf@c,w,c
  2538  00F136  EC8B  F078         	call	_putch
  2539  00F13A                     l318:
  2540  00F13A  C004  FFF6         	movff	printf@f,tblptrl
  2541  00F13E  C005  FFF7         	movff	printf@f+1,tblptrh
  2542  00F142  4A04               	infsnz	printf@f,f,c
  2543  00F144  2A05               	incf	printf@f+1,f,c
  2544  00F146                     	if	0	;tblptru may be non-zero
  2545  00F146                     	endif
  2546  00F146                     	if	0	;tblptru may be non-zero
  2547  00F146                     	endif
  2548  00F146  0008               	tblrd		*
  2549  00F148  CFF5 F008          	movff	tablat,printf@c
  2550  00F14C  5008               	movf	printf@c,w,c
  2551  00F14E  B4D8               	btfsc	status,2,c
  2552  00F150  0012               	return	
  2553  00F152  D7F0               	goto	l319
  2554  00F154                     __end_of_printf:
  2555                           	opt stack 0
  2556                           tblptru	equ	0xFF8
  2557                           tblptrh	equ	0xFF7
  2558                           tblptrl	equ	0xFF6
  2559                           tablat	equ	0xFF5
  2560                           prodh	equ	0xFF4
  2561                           prodl	equ	0xFF3
  2562                           wreg	equ	0xFE8
  2563                           status	equ	0xFD8
  2564                           
  2565 ;; *************** function _putch *****************
  2566 ;; Defined at:
  2567 ;;		line 24 in file "lcd.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  data            1    wreg     unsigned char 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  data            1    2[COMRAM] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;Total ram usage:        1 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    1
  2588 ;; This function calls:
  2589 ;;		_lcdNibble
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;;		_printf
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text2
  2597  00F116                     __ptext2:
  2598                           	opt stack 0
  2599  00F116                     _putch:
  2600                           	opt stack 29
  2601                           
  2602                           ;incstack = 0
  2603                           ;putch@data stored from wreg
  2604  00F116  6E03               	movwf	putch@data,c
  2605                           
  2606                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  2607  00F118  848C               	bsf	3980,2,c	;volatile
  2608                           
  2609                           ;lcd.c: 33: lcdNibble(data);
  2610  00F11A  5003               	movf	putch@data,w,c
  2611  00F11C  ECD0  F078         	call	_lcdNibble
  2612                           
  2613                           ;lcd.c: 34: _delay((unsigned long)((100)*(40000000/4000000.0)));
  2614  00F120  0EC8               	movlw	200
  2615  00F122                     u1527:
  2616  00F122  D000               	nop2	
  2617  00F124  2EE8               	decfsz	wreg,f,c
  2618  00F126  D7FD               	bra	u1527
  2619  00F128  0012               	return		;funcret
  2620  00F12A                     __end_of_putch:
  2621                           	opt stack 0
  2622                           tblptru	equ	0xFF8
  2623                           tblptrh	equ	0xFF7
  2624                           tblptrl	equ	0xFF6
  2625                           tablat	equ	0xFF5
  2626                           prodh	equ	0xFF4
  2627                           prodl	equ	0xFF3
  2628                           wreg	equ	0xFE8
  2629                           status	equ	0xFD8
  2630                           
  2631 ;; *************** function _initLCD *****************
  2632 ;; Defined at:
  2633 ;;		line 60 in file "lcd.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;Total ram usage:        1 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    2
  2654 ;; This function calls:
  2655 ;;		_lcdInst
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text3
  2662  00F154                     __ptext3:
  2663                           	opt stack 0
  2664  00F154                     _initLCD:
  2665                           	opt stack 28
  2666                           
  2667                           ;lcd.c: 68: _delay((unsigned long)((15)*(40000000/4000.0)));
  2668                           
  2669                           ;incstack = 0
  2670  00F154  0EC3               	movlw	195
  2671  00F156  6E04               	movwf	??_initLCD& (0+255),c
  2672  00F158  0ECD               	movlw	205
  2673  00F15A                     u1537:
  2674  00F15A  2EE8               	decfsz	wreg,f,c
  2675  00F15C  D7FE               	bra	u1537
  2676  00F15E  2E04               	decfsz	??_initLCD& (0+255),f,c
  2677  00F160  D7FC               	bra	u1537
  2678  00F162  F000               	nop	
  2679                           
  2680                           ;lcd.c: 69: lcdInst(0b00110011);
  2681  00F164  0E33               	movlw	51
  2682  00F166  EC81  F078         	call	_lcdInst
  2683                           
  2684                           ;lcd.c: 70: lcdInst(0b00110010);
  2685  00F16A  0E32               	movlw	50
  2686  00F16C  EC81  F078         	call	_lcdInst
  2687                           
  2688                           ;lcd.c: 71: lcdInst(0b00101000);
  2689  00F170  0E28               	movlw	40
  2690  00F172  EC81  F078         	call	_lcdInst
  2691                           
  2692                           ;lcd.c: 72: lcdInst(0b00001111);
  2693  00F176  0E0F               	movlw	15
  2694  00F178  EC81  F078         	call	_lcdInst
  2695                           
  2696                           ;lcd.c: 73: lcdInst(0b00000110);
  2697  00F17C  0E06               	movlw	6
  2698  00F17E  EC81  F078         	call	_lcdInst
  2699                           
  2700                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2701  00F182  0E01               	movlw	1
  2702  00F184  EC81  F078         	call	_lcdInst
  2703  00F188  0EC3               	movlw	195
  2704  00F18A  6E04               	movwf	??_initLCD& (0+255),c
  2705  00F18C  0ECD               	movlw	205
  2706  00F18E                     u1547:
  2707  00F18E  2EE8               	decfsz	wreg,f,c
  2708  00F190  D7FE               	bra	u1547
  2709  00F192  2E04               	decfsz	??_initLCD& (0+255),f,c
  2710  00F194  D7FC               	bra	u1547
  2711  00F196  F000               	nop	
  2712                           
  2713                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  2714  00F198  0E0F               	movlw	15
  2715  00F19A  EC81  F078         	call	_lcdInst
  2716  00F19E  0012               	return		;funcret
  2717  00F1A0                     __end_of_initLCD:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           prodh	equ	0xFF4
  2724                           prodl	equ	0xFF3
  2725                           wreg	equ	0xFE8
  2726                           status	equ	0xFD8
  2727                           
  2728 ;; *************** function _lcdInst *****************
  2729 ;; Defined at:
  2730 ;;		line 11 in file "lcd.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  data            1    wreg     unsigned char 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  data            1    2[COMRAM] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;Total ram usage:        1 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    1
  2751 ;; This function calls:
  2752 ;;		_lcdNibble
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;;		_initLCD
  2756 ;;		_lcd_set_cursor
  2757 ;;		_lcd_shift_cursor
  2758 ;;		_lcd_shift_display
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text4
  2763  00F102                     __ptext4:
  2764                           	opt stack 0
  2765  00F102                     _lcdInst:
  2766                           	opt stack 29
  2767                           
  2768                           ;incstack = 0
  2769                           ;lcdInst@data stored from wreg
  2770  00F102  6E03               	movwf	lcdInst@data,c
  2771                           
  2772                           ;lcd.c: 19: LATDbits.LATD2 = 0;
  2773  00F104  948C               	bcf	3980,2,c	;volatile
  2774                           
  2775                           ;lcd.c: 20: lcdNibble(data);
  2776  00F106  5003               	movf	lcdInst@data,w,c
  2777  00F108  ECD0  F078         	call	_lcdNibble
  2778                           
  2779                           ;lcd.c: 21: _delay((unsigned long)((100)*(40000000/4000000.0)));
  2780  00F10C  0EC8               	movlw	200
  2781  00F10E                     u1557:
  2782  00F10E  D000               	nop2	
  2783  00F110  2EE8               	decfsz	wreg,f,c
  2784  00F112  D7FD               	bra	u1557
  2785  00F114  0012               	return		;funcret
  2786  00F116                     __end_of_lcdInst:
  2787                           	opt stack 0
  2788                           tblptru	equ	0xFF8
  2789                           tblptrh	equ	0xFF7
  2790                           tblptrl	equ	0xFF6
  2791                           tablat	equ	0xFF5
  2792                           prodh	equ	0xFF4
  2793                           prodl	equ	0xFF3
  2794                           wreg	equ	0xFE8
  2795                           status	equ	0xFD8
  2796                           
  2797 ;; *************** function _lcdNibble *****************
  2798 ;; Defined at:
  2799 ;;		line 37 in file "lcd.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  data            1    wreg     unsigned char 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  data            1    1[COMRAM] unsigned char 
  2804 ;;  temp            1    0[COMRAM] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;Total ram usage:        2 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_lcdInst
  2824 ;;		_putch
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text5
  2829  00F1A0                     __ptext5:
  2830                           	opt stack 0
  2831  00F1A0                     _lcdNibble:
  2832                           	opt stack 29
  2833                           
  2834                           ;incstack = 0
  2835                           ;lcdNibble@data stored from wreg
  2836  00F1A0  6E02               	movwf	lcdNibble@data,c
  2837                           
  2838                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
  2839  00F1A2  5002               	movf	lcdNibble@data,w,c
  2840  00F1A4  0BF0               	andlw	240
  2841  00F1A6  6E01               	movwf	lcdNibble@temp,c
  2842                           
  2843                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
  2844  00F1A8  508C               	movf	3980,w,c	;volatile
  2845  00F1AA  0B0F               	andlw	15
  2846  00F1AC  6E8C               	movwf	3980,c	;volatile
  2847                           
  2848                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
  2849  00F1AE  5001               	movf	lcdNibble@temp,w,c
  2850  00F1B0  108C               	iorwf	3980,w,c	;volatile
  2851  00F1B2  6E8C               	movwf	3980,c	;volatile
  2852                           
  2853                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  2854  00F1B4  0E00               	movlw	0
  2855  00F1B6  BEF2               	btfsc	intcon,7,c	;volatile
  2856  00F1B8  0E01               	movlw	1
  2857  00F1BA  6E1D               	movwf	lcd@LCDinterruptState,c
  2858  00F1BC  9EF2               	bcf	intcon,7,c	;volatile
  2859  00F1BE  868C               	bsf	3980,3,c	;volatile
  2860  00F1C0  0E53               	movlw	83
  2861  00F1C2                     u1567:
  2862  00F1C2  2EE8               	decfsz	wreg,f,c
  2863  00F1C4  D7FE               	bra	u1567
  2864  00F1C6  F000               	nop	
  2865  00F1C8  968C               	bcf	3980,3,c	;volatile
  2866  00F1CA  0EC8               	movlw	200
  2867  00F1CC                     u1577:
  2868  00F1CC  D000               	nop2	
  2869  00F1CE  2EE8               	decfsz	wreg,f,c
  2870  00F1D0  D7FD               	bra	u1577
  2871  00F1D2  B01D               	btfsc	lcd@LCDinterruptState,0,c
  2872  00F1D4  D002               	bra	u15
  2873  00F1D6  9EF2               	bcf	intcon,7,c	;volatile
  2874  00F1D8  D001               	bra	u16
  2875  00F1DA                     u15:
  2876  00F1DA  8EF2               	bsf	intcon,7,c	;volatile
  2877  00F1DC                     u16:
  2878                           
  2879                           ;lcd.c: 52: data = (unsigned char) (data << 4);
  2880  00F1DC  3802               	swapf	lcdNibble@data,w,c
  2881  00F1DE  0BF0               	andlw	240
  2882  00F1E0  6E02               	movwf	lcdNibble@data,c
  2883                           
  2884                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
  2885  00F1E2  5002               	movf	lcdNibble@data,w,c
  2886  00F1E4  0BF0               	andlw	240
  2887  00F1E6  6E01               	movwf	lcdNibble@temp,c
  2888                           
  2889                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
  2890  00F1E8  508C               	movf	3980,w,c	;volatile
  2891  00F1EA  0B0F               	andlw	15
  2892  00F1EC  6E8C               	movwf	3980,c	;volatile
  2893                           
  2894                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
  2895  00F1EE  5001               	movf	lcdNibble@temp,w,c
  2896  00F1F0  108C               	iorwf	3980,w,c	;volatile
  2897  00F1F2  6E8C               	movwf	3980,c	;volatile
  2898                           
  2899                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  2900  00F1F4  0E00               	movlw	0
  2901  00F1F6  BEF2               	btfsc	intcon,7,c	;volatile
  2902  00F1F8  0E01               	movlw	1
  2903  00F1FA  6E1D               	movwf	lcd@LCDinterruptState,c
  2904  00F1FC  9EF2               	bcf	intcon,7,c	;volatile
  2905  00F1FE  868C               	bsf	3980,3,c	;volatile
  2906  00F200  0E53               	movlw	83
  2907  00F202                     u1587:
  2908  00F202  2EE8               	decfsz	wreg,f,c
  2909  00F204  D7FE               	bra	u1587
  2910  00F206  F000               	nop	
  2911  00F208  968C               	bcf	3980,3,c	;volatile
  2912  00F20A  0EC8               	movlw	200
  2913  00F20C                     u1597:
  2914  00F20C  D000               	nop2	
  2915  00F20E  2EE8               	decfsz	wreg,f,c
  2916  00F210  D7FD               	bra	u1597
  2917  00F212  B01D               	btfsc	lcd@LCDinterruptState,0,c
  2918  00F214  D002               	bra	u25
  2919  00F216  9EF2               	bcf	intcon,7,c	;volatile
  2920  00F218  D001               	bra	u26
  2921  00F21A                     u25:
  2922  00F21A  8EF2               	bsf	intcon,7,c	;volatile
  2923  00F21C                     u26:
  2924  00F21C  0012               	return		;funcret
  2925  00F21E                     __end_of_lcdNibble:
  2926                           	opt stack 0
  2927                           tblptru	equ	0xFF8
  2928                           tblptrh	equ	0xFF7
  2929                           tblptrl	equ	0xFF6
  2930                           tablat	equ	0xFF5
  2931                           prodh	equ	0xFF4
  2932                           prodl	equ	0xFF3
  2933                           intcon	equ	0xFF2
  2934                           wreg	equ	0xFE8
  2935                           status	equ	0xFD8
  2936                           tblptru	equ	0xFF8
  2937                           tblptrh	equ	0xFF7
  2938                           tblptrl	equ	0xFF6
  2939                           tablat	equ	0xFF5
  2940                           prodh	equ	0xFF4
  2941                           prodl	equ	0xFF3
  2942                           intcon	equ	0xFF2
  2943                           wreg	equ	0xFE8
  2944                           status	equ	0xFD8
  2945                           
  2946                           	psect	rparam
  2947  0000                     tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodh	equ	0xFF4
  2952                           prodl	equ	0xFF3
  2953                           intcon	equ	0xFF2
  2954                           wreg	equ	0xFE8
  2955                           status	equ	0xFD8


Data Sizes:
    Strings     411
    Constant    40
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      30
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_37(CODE[11]), STR_36(CODE[11]), STR_35(CODE[11]), STR_34(CODE[11]), 
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[10]), 
		 -> STR_29(CODE[10]), STR_28(CODE[10]), STR_27(CODE[10]), STR_26(CODE[10]), 
		 -> STR_25(CODE[10]), STR_24(CODE[10]), STR_23(CODE[10]), STR_22(CODE[10]), 
		 -> STR_21(CODE[13]), STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[12]), 
		 -> STR_17(CODE[13]), STR_16(CODE[13]), STR_15(CODE[11]), STR_14(CODE[17]), 
		 -> STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[7]), 
		 -> STR_9(CODE[17]), STR_8(CODE[15]), STR_7(CODE[13]), STR_6(CODE[14]), 
		 -> STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch
    _putch->_lcdNibble
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    3984
                                              8 COMRAM    20    20      0
                            _initLCD
                            _lcdInst
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2    2948
                                              3 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printf
     _putch
       _lcdNibble
   _putch
     _lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1C      1E       1       23.6%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E       6        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jan 30 01:17:49 2018

                     l70 F444                       l80 F5C4                       l72 F592  
                     l64 F2AC                       l91 F61E                       l83 F5EC  
                     l67 F382                       l77 F59E                       l94 F646  
                     l88 F5F8                       l99 F652                       u15 F1DA  
                     u16 F1DC                       u25 F21A                       u26 F21C  
            __CFG_CPD$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l110 F6AC                      l102 F678                      l201 F9A2  
                    l121 F706                      l113 F6D2                      l105 F6A0  
                    l220 FA30                      l212 F9FC                      l204 F9CA  
                    l132 F760                      l124 F72C                      l116 F6FA  
                    l231 FA8A                      l223 FA56                      l215 FA24  
                    l143 F7BA                      l135 F786                      l127 F754  
                    l160 F862                      l209 F9D6                      l242 FAE4  
                    l234 FAB0                      l226 FA7E                      l154 F814  
                    l146 F7E0                      l138 F7AE                      l171 F8BC  
                    l253 FB16                      l245 FB0A                      l237 FAD8  
                    l165 F86E                      l157 F83A                      l149 F808  
                    l318 F13A                      l190 F948                      l182 F916  
                    l319 F134                      l176 F8C8                      l168 F894  
                    l193 F970                      l187 F922                      l179 F8EE  
                    l198 F97C             __CFG_CPB$OFF 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     STR_1 FCEF  
                   STR_2 FB85                     STR_3 FB74                     STR_4 FBA6  
                   STR_5 FB96                     STR_6 FBEF                     STR_7 FBFD  
                   STR_8 FBB6                     STR_9 FB63                     u1207 F30E  
                   u1217 F340                     u1307 F492                     u1227 F35A  
                   u1317 F4C4                     u1237 F392                     _LATA 000F89  
                   _LATB 000F8A                     u1407 F6DE                     u1327 F4DE  
                   u1247 F3B8                     u1167 F26A                     _LATC 000F8B  
                   _LATD 000F8C                     u1417 F738                     u1337 F510  
                   u1257 F3D0                     u1177 F284                     _LATE 000F8D  
                   u1507 FA62                     u1427 F792                     u1347 F52A  
                   u1267 F402                     u1187 F2BC                     u1517 FABC  
                   u1437 F7EC                     u1357 F55C                     u1277 F41C  
                   u1197 F2F4                     u1527 F122                     u1447 F846  
                   u1367 F576                     u1287 F454                     u1537 F15A  
                   u1457 F8A0                     u1377 F5D0                     u1297 F47A  
                   u1547 F18E                     u1467 F8FA                     u1387 F62A  
                   u1557 F10E                     u1477 F954                     u1397 F684  
                   u1567 F1C2                     u1487 F9AE                     u1577 F1CC  
                   u1497 FA08                     u1587 F202                     u1597 F20C  
                   _main F21E                     _keys FB4C                     prodh 000FF4  
                   prodl 000FF3                     start 0002            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000         __end_of_LCD_LEFT FB5E  
                  ?_main 0001                    STR_10 FCF7                    STR_11 FBEF  
                  STR_20 FBE1                    STR_12 FBC5                    STR_13 FBB6  
                  STR_21 FC17                    STR_14 FB63                    STR_30 FCE5  
                  STR_22 FC95                    STR_23 FC9F                    STR_31 FC48  
                  STR_15 FC3D                    STR_24 FCA9                    STR_32 FC53  
                  STR_16 FC24                    STR_25 FCB3                    STR_33 FC5E  
                  STR_17 FC0A                    STR_26 FCBD                    STR_34 FC69  
                  STR_18 FC31                    STR_27 FCC7                    STR_35 FC74  
                  STR_19 FBD3                    STR_28 FCD1                    STR_36 FC7F  
                  STR_29 FCDB                    STR_37 FC8A                    _PORTB 000F81  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000          __end_of_lcdInst F116           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
           main@keypress 000D           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_initLCD F1A0  
         __CFG_EBTRB$OFF 000000                    _input FB3B                    _putch F116  
                  tablat 000FF5        _LCDinterruptState 001E                    status 000FD8  
         __CFG_PBADEN$ON 000000          __initialization F0F4             __end_of_main FB3A  
           __end_of_keys FB5D           __CFG_OSC$HSPLL 000000        __end_of_LCD_RIGHT FB5F  
                 ??_main 0009            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   ?_putch 0001           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                ??_lcdInst 0003                   _printf F12A  
              ??_initLCD 0004             __mediumconst FB3A                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization F0F8            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_input FB4C            __end_of_putch F12A       __size_of_lcdNibble 007E  
                ??_putch 0003                  ?_printf 0004     lcd@LCDinterruptState 001D  
      __end_of_lcdNibble F21E                  __Hparam 0000                  __Lparam 0000  
                __pcinit F0F4                  __ramtop 1000                  _lcdInst F102  
                __ptext0 F21E                  __ptext1 F12A                  __ptext2 F116  
                __ptext3 F154                  __ptext4 F102                  __ptext5 F1A0  
        __size_of_printf 002A                  _initLCD F154                _LCD_RIGHT FB5E  
   end_of_initialization F0F8    __end_of_LCD_SIZE_HORZ FB61    __end_of_LCD_SIZE_VERT FB60  
          __Lmediumconst FB3A                  printf@c 0008                  printf@f 0004  
              _PORTBbits 000F81           __end_of_printf F154      start_initialization F0F4  
       main@keypress_201 001B         main@keypress_203 001C         main@keypress_204 000B  
       main@keypress_181 0011         main@keypress_191 0016         main@keypress_183 0012  
       main@keypress_175 000E         main@keypress_193 0017         main@keypress_185 0013  
       main@keypress_177 000F         main@keypress_195 0018         main@keypress_187 0014  
       main@keypress_179 0010         main@keypress_197 0019         main@keypress_189 0015  
       main@keypress_199 001A         __CFG_LPT1OSC$OFF 000000                 ??_printf 0006  
            __pbssCOMRAM 001D        __CFG_CCP2MX$PORTC 000000            __pmediumconst FB3A  
              _lcdNibble F1A0                 ?_lcdInst 0001                 ?_initLCD 0001  
         __size_of_putch 0014                 _LCD_LEFT FB5D                 _LATDbits 000F8C  
       __CFG_WDTPS$32768 000000               ?_lcdNibble 0001            lcdNibble@data 0002  
          lcdNibble@temp 0001           _LCD_HORZ_LIMIT FB62                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of_lcdInst 0014  
       __size_of_initLCD 004C   __end_of_LCD_HORZ_LIMIT FB63           _LCD_VERT_LIMIT FB61  
          __size_of_main 091C              ??_lcdNibble 0001                 main@temp 000C  
              putch@data 0003               _INTCONbits 000FF2   __end_of_LCD_VERT_LIMIT FB62  
          _LCD_SIZE_HORZ FB60            _LCD_SIZE_VERT FB5F                 printf@ap 0006  
            lcdInst@data 0003  
